<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfDataGrid.Android</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.SfDataGrid.GridUnboundCellTextBoxRenderer">
            /// <summary>
            GridUnboundCellTextBoxRenderer is a class for cell renderer that displays the unbound column value in a <see cref="T:Syncfusion.SfDataGrid.GridCell"/>.
            The class provides strong typed override methods for initializing content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and content of child elements, creation and unloading of views will not trigger 
            Layout or Render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundCellTextBoxRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridUnboundCellTextBoxRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundCellTextBoxRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.DataColumnBase,Android.Widget.TextView)">
            <summary>
            Initializes the column element of a <see cref="!:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Android.Widget.TextView"/> and required values.
            </summary>
            <param name="dataColumn">The data column.</param>
            <param name="view">An <see cref="T:Android.Widget.TextView"/> object to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundCellTextBoxRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.DataColumnBase,Android.Widget.TextView)">
            <summary>
            Updates the column element of a <see cref="!:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Android.Widget.TextView"/> and required values.
            </summary>
            <param name="dataColumn">The data column.</param>
            <param name="view">An <see cref="T:Android.Widget.TextView"/> to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundCellTextBoxRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Android.Widget.TextView"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Android.Widget.TextView"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundCellTextBoxRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the cell value of the associated column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundCellTextBoxRenderer.CanUpdateBinding(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Determines whether the binding for the column can be updated.
            </summary>
            <returns>
            Returns <b>true</b> if the binding can be updated for the column.
            </returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.QueryUnboundColumnValueHandler">
            <seealso cref="T:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs">
            <summary>
            Provides data for QueryUnbounColumnValue event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs.Column">
            <summary>
            Gets the GridColumn of the cell triggers this event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs.Value">
            <summary>
            Gets or sets the value for GridUnboundColumn cell based on UnboundAction. 
            </summary>
            <value>
            An object that contains the value for the GridUnboundColumn.
            </value>        
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs.Record">
            <summary>        
            Gets the data object associated with the row which has the grid cell triggered this event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs.UnboundAction">
            <summary>
            Defines the constants that specifies the actions for triggering the QueryUnboundColumnValue event. 
            </summary>
            <value>
            The UnboundActions which triggered this event.
            </value>
            <remarks>The UnboundAction â€“ QueryData denotes, the event is raised to get or query the value  for cell and the UnboundAction - CommitData denotes, the event is raised to notify or commit the edited value.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs.CellType">
            <summary>        
            Gets or sets the cell type associated with SfDataGrid.UnboundRowCellRenderers for UnboundRow cell. 
            </summary>
            <value>
            A string that specifies the cell type of Unbound cell.
            </value>
            <remarks>SfDataGrid allows to add custom cell types by adding associated renderer in SfDataGrid.UnboundRowCellRenderers.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs.RowColumnIndex">
            <summary>
            Gets or sets the RowColumnIndex of UnboundRow cell which triggers this event.
            </summary>
            <value>
            The ScrollAxis.RowColumnIndex of the Unbound cell which triggers this event.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.UnboundActions">
            <summary>
            Defines the constants that specify the possible actions for Unbound column or Unbound row in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.UnboundActions.QueryData">
            <summary>
            The value for Unbound column or Unbound row being queried from the user.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.UnboundActions.CommitData">
            <summary>
            The value is being committed in Unbound column or Unbound row.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.UnboundActions.PasteData">
            <summary>
            The value is being pasted in Unbound column or Unbound row.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs.#ctor(Syncfusion.SfDataGrid.SfDataGrid)" -->
        <member name="P:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs.From">
            <summary>
            Gets the index of the column that is being dragged.    
            </summary>
            <value>
            An index of the column being dragged.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs.To">
            <summary>
            Gets the index of the column that the drag view is currently placed over or dropped.
            </summary>
            <value>
            The index of the column that the drag view is currently placed over or dropped.
            </value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs.DraggingPosition" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs.Reason" -->
        <member name="T:Syncfusion.SfDataGrid.QueryColumnDraggingEventHandler">
            <param name="e">A <see cref="T:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs"/> that contains the event data.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs"/>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs.#ctor(Syncfusion.SfDataGrid.SfDataGrid)" -->
        <member name="P:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs.From">
            <summary>
            Gets the index of the row that is being dragged.    
            </summary>
            <value>
            An index of the row being dragged.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs.To">
            <summary>
            Gets the index of the row that the drag view is currently placed over or dropped.
            </summary>
            <value>
            The index of the row that the drag view is currently placed over or dropped.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs.RowData">
            <summary>
            Gets the row data.  
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs.Reason" -->
        <member name="T:Syncfusion.SfDataGrid.QueryRowDraggingEventHandler">
            <param name="e">A <see cref="T:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs"/> that contains the event data.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridColumnDragDropController">
            <summary>
            Provides the base implementation for column drag-and-drop operations in SfDataGrid.
            </summary>
            <remarks>
            It provides the set of public properties to customize the drag-and-drop operation.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initialize a new instance of the GridColumnDragDropController class.
            </summary>
            <param name="dataGrid">The SfDatagrid</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.#ctor">
            <summary>
            Initialize a new instance of the GridColumnDragDropController class.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.SfDataGrid.GridDragDropController" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.SfDataGrid.GridDragDropController.DataGrid" -->
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.StartIndex">
            <summary>
            Gets the start index.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.EndIndex">
            <summary>
            Gets the end index.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.DragViewMaxWidth">
             <summary>
            Gets or sets the maximum width of the drag view.
             </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.DragViewMaxHeight">
            <summary>
            Gets or sets the maximum height of the drag view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.DragViewMinWidth">
             <summary>
            Gets or sets the minimum width of the drag view.
             </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.DragViewMinHeight">
            <summary>
            Gets or sets the minimum height of the drag view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.CanAutoScroll">
            <summary>
            Gets or sets a valude indicating whether to auto scroll the grid when dragging.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.IsDragging">
            <summary>
            Returns whether dragging is in progress or not.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridRowDragDropController">
            <summary>
            Provides the base implementation for row drag-and-drop operations in SfDataGrid.
            </summary>
            <remarks>
            It provides the set of public properties to customize the drag-and-drop operation.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initialize a new instance of the GridRowDragDropController class.
            </summary>
            <param name="dataGrid">The SfDatagrid</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.#ctor">
            <summary>
            Initialize a new instance of the GridRowDragDropController class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridColumnSizer">
            <summary>
            Represents a class that handles the sizing for all the GridColumns in the <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection in a <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridColumnSizer class using the specified dataGrid.
            </summary>
            <param name="grid">The SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.OnColumnPropertyChanged(Syncfusion.SfDataGrid.GridColumn,System.String)">
            <summary>
            Represents the method that will handle the property changes in grid columns.
            </summary>
            <param name="column">A <see cref="!:Syncfusion.SfDataGrid.XForms.GridColumn"/> object.</param>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.ResetAutoWidth(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Resets the auto width for the specified column.
            </summary>
            <param name="column">The corresponding column to reset the auto width.</param>
            <remarks>The column width is reset to <b>double.Nan</b> ,if the column sizing needs to be recalculate based on the data.</remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the column is null.</exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.SetAutoWidth(Syncfusion.SfDataGrid.GridColumn,System.Double)">
            <summary>
            Sets the width for the specified column based on <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer.Auto"/> column sizer.
            </summary>
            <param name="column">The corresponding column to set Auto width.</param>
            <param name="width">The corresponding width set as Auto width.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when the column is null.</exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.Refresh">
            <summary>
            Refreshes the GridColumns in the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.WireEvent">
            <summary>
            Wires the events associated with <see cref="T:Syncfusion.SfDataGrid.GridColumnSizer"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.UnWireEvent">
            <summary>
            UnWires the events associated with <see cref="T:Syncfusion.SfDataGrid.GridColumnSizer"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.RefreshColumnSizer(System.Double)">
            <summary>
            Refreshes the GridColumns in the view with respect to the given view size.
            </summary>
            <param name="viewSize"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.SetColumnWidth(Syncfusion.SfDataGrid.GridColumn,System.Double)">
            <summary>
            Sets the given width to the specified <see cref="!:Syncfusion.SfDataGrid.XForms.GridColumn"/>.
            </summary>
            <param name="column">A <see cref="!:Syncfusion.SfDataGrid.XForms.GridColumn"/> object.</param>
            <param name="width">The width for the column.</param>
            <returns>Returns the actual width of the <see cref="!:Syncfusion.SfDataGrid.XForms.GridColumn"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.Refresh(System.Double)">
            <summary>
            Refreshes the GridColumns in the view with respect to the given view size.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.calculateColumnSizerWidth(System.Double)">
            <summary>
            Calculates the width for the <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> in a <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="viewSize">The view size.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.setColumnWidthBasedOnGridColumnSizer(System.Double,System.Collections.Generic.List{Syncfusion.SfDataGrid.GridColumn},Syncfusion.SfDataGrid.GridColumn,System.Double)">
            <summary>
            Sets the width for the GridColumns based on the <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer"/>.
            </summary>
            <param name="totalColumnsSize">The total size of the columns.</param>
            <param name="calculatedColumns">The list of calculated columns.</param>
            <param name="lastColumn">The last column.</param>
            <param name="viewSize">The view size.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.CalculateCellSize(System.Drawing.Size,Syncfusion.SfDataGrid.GridColumn,System.Object,Syncfusion.SfDataGrid.GridQueryBounds)">
            <summary>
            Gets the size of the cell to measure the width of the specified column.
            </summary>
            <param name="column">
            The corresponding column to measure its cell size.
            </param>
            <param name="data">
            The corresponding data to measure cathe text size in cell.
            </param>
            <returns>
            Returns the size of the cell.
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.GetDisplayText(Syncfusion.SfDataGrid.GridColumn,System.Object)">
            <summary>
            Gets the display text of cell for the specified column and record.
            </summary>
            <param name="column">
            The corresponding column to get the display text of cell.
            </param>
            <param name="record">
            The corresponding record to get the display text.
            </param>
            <returns>
            Returns the display text of the corresponding column.
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.MeasureTemplate(Syncfusion.SfDataGrid.GridColumn,System.Object,Syncfusion.SfDataGrid.GridQueryBounds)">
            <summary>
            Measures the size of the template when the column sizer is <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer.Auto"/>.
            </summary>        
            <param name="record">
            The corresponding record to measure the template.
            </param>
            <param name="column">
            The corresponding column to measure the template.
            </param>        
            <returns>
            Returns the size of template.
            </returns>       
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfDataGrid.GridColumnSizer.MeasureHeaderTemplate(Syncfusion.SfDataGrid.GridColumn,Syncfusion.SfDataGrid.GridQueryBounds)" -->
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.SetStarWidthForColumns(System.Double,System.Collections.Generic.IEnumerable{Syncfusion.SfDataGrid.GridColumn})">
            <summary>
            Sets star width for the remaining columns for which the widths are yet to be assigned.
            </summary>
            <param name="columnsWidth">The width of the columns.</param>
            <param name="columns">The collection of remaining <see cref="!:Syncfusion.SfDataGrid.XForms.GridColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.SetColumnWidthForRemainingColumns(System.Collections.Generic.IEnumerable{Syncfusion.SfDataGrid.GridColumn})">
            <summary>
            Sets the default column width for the columns that are yet to be assigned width after applying column sizer calculations.
            </summary>
            <param name="remainingColumns">The collection of remaining <see cref="!:Syncfusion.SfDataGrid.XForms.GridColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.Dispose">
            <summary>
            Perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridUnboundColumn">
            <summary>    
            Represents the column which is used to display additional information in columns which are not bound with data object.
            </summary>
            <remarks>
            It is mandatory to specify the `GridColumn.MappingName` for `GridUnboundColumn` with some name to identify the column. It is not necessary to define name of field in the data object.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundColumn.#ctor">
            <summary>
            Initializes a new instance of GridUnboundColumn class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridUnboundColumn.CaseSensitive">
            <summary>
            Gets or sets a value that indicates the casing of expression evaluation.       
            </summary>
            <value>
            <b>true</b> if the case sensitive is enabled; otherwise , <b>false</b>. The default value is <b>true</b>.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridUnboundColumn.Expression">
            <summary>
            Gets or sets an expression which used to calculate values for GridUnboundColumn.
            </summary>
            <value>
            A string that specifies an expression to populate the data for GridUnboundColumn. The default value is <b>string.Empty</b>.
            </value>
            <example>
            <code lang="XAML">
            <![CDATA[        
            <syncfusion:GridUnboundColumn Expression="Amount*Discount/100"
                                          HeaderText="Discount Amount"
                                          MappingName="DiscountAmount" />
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundColumn.ComputeValue(System.Object)">
            <summary>
            Gets Computed value for expression in UnboundColumn
            </summary>
            <param name="record">Specifies the current row data</param>
            <returns>Value of compiled expression as object</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfDataGrid.GridUnboundColumn.System#IDisposable#Dispose" -->
        <member name="T:Syncfusion.SfDataGrid.CalulationExtensions">
            <summary>
            Represents a class that implements the calculation for GridUnboundColumn.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalulationExtensions.GetCompiledExpression(System.Object,System.Boolean,System.String,Syncfusion.SfDataGrid.ExpressionError@)">
            <summary>
            Gets Compiled Expression
            </summary>
            <param name="source">The data</param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="formula">The formula applied</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalulationExtensions.GetSimpleExpression(System.Object,System.Boolean,System.String,System.Linq.Expressions.ParameterExpression,Syncfusion.SfDataGrid.ExpressionError@)">
            <summary>
            Get SimpleExpression
            </summary>
            <param name="source">The data</param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="formula">The formula applied</param>
            <param name="paramExp">Specifies the parameter expression applied</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalulationExtensions.CompileToExpression(System.Object,System.Linq.Expressions.ParameterExpression,System.Boolean,System.String@,System.Char[],System.Char[],Syncfusion.SfDataGrid.ExpressionError@)">
            <summary>
            Compile to Expression
            </summary>
            <param name="source">The data</param>
            <param name="paramExp">Specifies the parameter expression applied</param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="formula">The formula applied</param>
            <param name="operations">Specifies the operation set to be performed</param>
            <param name="allOperations">Specifies all the available operations</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalulationExtensions.CoerceType(System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@,Syncfusion.SfDataGrid.ExpressionError@)">
            <summary>
            Casting the type according to the expression
            </summary>
            <param name="leftExp">Specifes the left part of expression</param>
            <param name="rightExp">Specifes the right part of expression</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalulationExtensions.GetExpression(System.Object,System.Boolean,System.Linq.Expressions.ParameterExpression,System.String,System.String,System.Char,Syncfusion.SfDataGrid.ExpressionError@)">
            <summary>
            Gets Expression
            </summary>
            <param name="source"></param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="paramExp">Specifies the parameter expression applied</param>
            <param name="leftExp">Specifes the left part of expression</param>
            <param name="rightExp">Specifes the right part of expression</param>
            <param name="operand">Specifies the operand</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalulationExtensions.GetFunctionName(System.Char)">
            <summary>
            Gets function name
            </summary>
            <param name="c">Specifies the character containing the key word for the function</param>
            <returns>Function Name as string</returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalulationExtensions.GetExpressionPiece(System.Object,System.Boolean,System.Linq.Expressions.ParameterExpression,System.String,Syncfusion.SfDataGrid.ExpressionError@)">
            <summary>
            Gets Expression piece
            </summary>
            <param name="source"></param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="paramExp"></param>
            <param name="piece"></param>
            <param name="error"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalulationExtensions.TokenizeStrings(System.String,Syncfusion.SfDataGrid.ExpressionError@)">
            <summary>
            Tokenize the strings
            </summary>
            <param name="formula"></param>
            <param name="error"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SwipeStartedEventHandler">
            <summary>
            Represents the method that will handle the SwipeStarted event in a SfDataGrid.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SwipeStartedEventArgs">
            <summary>
            Provides data for the SwipeStarted event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeStartedEventArgs.SwipeOffSet">
            <summary>
            Gets the swipe offset of the swiped row.
            </summary>
            <value>The swipe offset of the swiped row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeStartedEventArgs.SwipeDirection">
            <summary>
            Gets the swipe direction of the swiped row.
            </summary>
            <value>The swipe direction of the swiped row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeStartedEventArgs.RowIndex">
            <summary>
            Gets the row index of the swiped row.
            </summary>
            <value>The row index of the swiped row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeStartedEventArgs.RowData">
            <summary>
            Gets the underlying data object of the swiped row from the binded data source.
            </summary>
            <value>The underlying data object of the swiped row from the binded data source.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SwipeEndedEventHandler">
            <summary>
            Represents the method that will handle the SwipeEnded event in a SfDataGrid.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SwipeEndedEventArgs">
            <summary>
            Provides data for the SwipeEnded event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeEndedEventArgs.SwipeOffset">
            <summary>
            Gets the swipe offset of the swiped row.
            </summary>
            <value>The swipe offset of the swiped row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeEndedEventArgs.SwipeDirection">
            <summary>
            Gets the swipe direction of the swiped row.
            </summary>
            <value>The swipe direction of the swiped row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeEndedEventArgs.RowIndex">
            <summary>
            Gets the row index of the swiped row.
            </summary>
            <value>The row index of the swiped row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeEndedEventArgs.RowData">
            <summary>
            Gets the underlying data object of the swiped row from the binded data source.
            </summary>
            <value>The underlying data object of the swiped row from the binded data source.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SwipingEventHandler">
            <summary>
            Represents the method that will handle the Swiping event in a SfDataGrid.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SwipingEventArgs">
            <summary>
            Provides data for the Swiping event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipingEventArgs.SwipeOffSet">
            <summary>
            Gets the current swipe offset of the row being swiped.
            </summary>
            <value>The current swipe offset of the row being swiped.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipingEventArgs.SwipeDirection">
            <summary>
            Gets the swipe direction of the swiped row.
            </summary>
            <value>The swipe direction of the swiped row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipingEventArgs.RowIndex">
            <summary>
            Gets the row index of the row being swiped.
            </summary>
            <value>The row index of the row being swiped.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipingEventArgs.RowData">
            <summary>
            Gets the underlying data object of the row being swiped from the binded data source.
            </summary>
            <value>The underlying data object of the row being swiped from the binded data source.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.BorderView.BorderColor">
            <summary>
            Gets or sets the border color
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridSummaryColumn">
            <summary>
             This class contains properties to set CaptionSummaryRow content.
            </summary>   
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryColumn.CustomAggregate">
            <summary>
            Gets or sets a value indicating whether CustomAggregate is set.
            </summary>
            <value>CustomAggregte.</value>       
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryColumn.Format">
            <summary>
            Gets or sets a value indicating a format.
            </summary>
            <value>The format.</value>       
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryColumn.MappingName">
            <summary>
            Gets or sets a value indicating a column name.
            </summary>
            <value>The column name.</value>       
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryColumn.Name">
            <summary>
            Gets or sets a value indicating the summary name.
            </summary>
            <value>The name.</value>       
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryColumn.SummaryType">
            <summary>
            Gets or sets a value indicating the summary type.
            </summary>
            <value>The summary type.</value>       
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.AppearanceManager">
            <summary>
            Class which customize the appearance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.AppearanceManager.#ctor">
            <summary>
            Initializes instance of appearance manager
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.AppearanceManager.GetNumericButtonSelectionBackgroundColor">
            <summary>
            Returns the numeric button selection background color
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.AppearanceManager.GetNumericButtonSelectionForegroundColor">
            <summary>
            Returns the numeric button selection foreground color
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.AppearanceManager.GetNumericButtonBackgroundColor">
            <summary>
            Returns the numeric button background color
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.AppearanceManager.GetNumericButtonForegroundColor">
            <summary>
            Returns the numeric button foreground color
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.AppearanceManager.GetNavigationButtonBackgroundColor">
            <summary>
            Returns the navigation buttons background color
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.NamespaceDoc">
            <summary>
            Provides classes, interfaces and enumerators to create SfDataPager which enable a user with paging functionality for data-bound controls.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButton.#ctor(Android.Content.Context)">
            <summary>
            Initialize the instance of NumericButton
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButton.NavigationButtons">
            <summary>
            Gets or sets the Navigations button type
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButton.PageIndex">
            <summary>
            Gets or sets the PageIndex of the Numeric Button,which indicates current page index of the DataPager. 
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButton.IsCurrentPage">
            <summary>
            Gets or set Current page, used to highlight the background of the numeric button.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButton.IsButtonEnabled">
            <summary>
            Gets or sets a value indicating whether to enable/disable the NumericButton.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButton.IsElipsisElement">
            <summary>
            Gets or sets a value indicating the button is ElipsisElement or not.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButton.ElipsisPosition">
            <summary>
            Gets or sets ElipsisPosition
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButton.SetAsCurrentPage">
            <summary>
            Sets Current page based on selection, whether selected element is ellipsis or numeric button.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PanelElement.#ctor(Android.Content.Context)">
            <summary>
            Initialize the instance of PanelElement
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ScrollableElement.#ctor">
            <summary>
            Initializes the instance of scrollable element.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.ScrollableElement.Element">
            <summary>
            Gets or sets the Panel Element.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.ScrollableElement.Index">
            <summary>
            Gets or sets Scrollable Element Index
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.GetUnboundFunc(Syncfusion.SfDataGrid.GridUnboundColumn)">
            <summary>
            Gets Unbound Func Value for sorting and grouping
            </summary>
            <param name="column">Specfies the current grid column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.GetFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns an Expression Func for the given property name.
            </summary>
            <param name="propertyName">The property name.</param>
            <returns>Expression Func for the given property name.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.GetExpressionFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns Expression Func for UnboundColumns for Sorting and Grouping.
            </summary>
            <param name="propertyName"></param>
            <returns>Expression Func for UnboundColumns for Sorting and Grouping.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.SetDataGrid(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            When view is reused, need to update the grid
            </summary>        
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode.None">
            <summary>
            No Ellipsis element is shown 
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode.Before">
            <summary>
            Ellipsis element is shown before 
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode.After">
            <summary>
            Ellipsis element is shown after 
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode.Both">
            <summary>
            Ellipsis element is shown before and after
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.ElipsisPosition.None">
            <summary>
            Ellipsis element does not layout
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.ElipsisPosition.Left">
            <summary>
            Ellipsis element layout in left position 
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.ElipsisPosition.Right">
            <summary>
            Ellipsis element layout in right position 
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.NavigationButtons.FirstPageButton">
            <summary>
            Type of NumericButton which Navigates to first page
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.NavigationButtons.PreviousPageButton">
            <summary>
            Type of NumericButton which Navigates to previous page
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.NavigationButtons.NextPageButton">
            <summary>
            Type of NumericButton which Navigates to next page
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.NavigationButtons.LastPageButton">
            <summary>
            Type of NumericButton which Navigates to last page
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.NavigationButtons.NumericButton">
            <summary>
            Type of NumericButton which Navigates to next page
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.ScrollOrientation.Horizontal">
            <summary>
            Sets the Orientation of the DataPager to Horizontal
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.ScrollOrientation.Vertical">
            <summary>
            Sets the Orientation of the DataPager to Vertical
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.PageIndexChangingEventArgs">
            <summary>
            Class which contains the arguments for PageChanging Event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.PageIndexChangingEventArgs.OldPageIndex">
            <summary>
            Index of the Previous Page
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.PageIndexChangingEventArgs.NewPageIndex">
            <summary>
            Index of the New page
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.PageIndexChangedEventArgs">
            <summary>
            Class which contains the arguments for PageChanged Event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.PageIndexChangedEventArgs.OldPageIndex">
            <summary>
            Index of the Previous Page
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.PageIndexChangedEventArgs.NewPageIndex">
            <summary>
            Index of the New page
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.OnDemandLoadingEventArgs">
            <summary>
            Class which contains the arguments for PageChanging Event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.OnDemandLoadingEventArgs.StartIndex">
            <summary>
            Index of the Start Page Index
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.OnDemandLoadingEventArgs.PageSize">
             <summary>
             Size of the Page.
             </summary>
            <remarks> Number of rows in view </remarks>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.PageIndexChangedEventhandler">
            <summary>
            Delegate for PageIndex Changed Event.
            </summary>
            <param name="sender">The source of the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.PageIndexChangingEventhandler">
            <summary>
            Delegate for Selection Changing Event.
            </summary>
            <param name="sender">The source of the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.OnDemandLoadingEventHandler">
            <summary>
            Delegate for OnDemangLoading Event.
            </summary>
            <param name="sender">The source of the event.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.PreGenerateItems(System.Int32,System.Int32)">
            <summary>
            Creates NumericButtons to occupy DataPager at first time.
            </summary>
            <param name="startIndex">S</param>
            <param name="endIndex"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.EnsureItems(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Ensures NumericButton that are available in the view.
            </summary>
            <param name="startIndex"> Starting Index</param>
            <param name="endIndex">Ending Index</param>
            <param name="isInternalOffset"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.generateEllipsisElement(Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode)">
            <summary>
            Creates and add, ellipsisElement  to the panel.
            </summary>
            <param name="mode"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.createElipsisElement(Syncfusion.SfDataGrid.DataPager.ElipsisPosition,System.Int32)">
            <summary>
            Creates Ellipsis element
            </summary>
            <param name="position"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.updateItems(System.Collections.Generic.List{Syncfusion.SfDataGrid.DataPager.ScrollableElement},System.Int32)">
            <summary>
            Updates the NumericButton's PageIndex
            </summary>
            <param name="elements"></param>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.Footer.#ctor(Android.Content.Context)">
            <summary>
            Initialize the instance of Footer
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.Header.#ctor(Android.Content.Context)">
            <summary>
            Initialize the instance of Header
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.#ctor(Android.Content.Context)">
            <summary>
            Initialize the instance of NumericButtonPanel
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.SfDataPager">
            <summary>
            SfDataPagers allow datasource to populate into pages.Where page navigation can be done using NumericButton.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.EnableGridPaging">
            <summary>
            Gets or sets the value indicating whether to create source from GridPagedCollectionViewWrapper or PagedCollectionView.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.Source">
            <summary>
            Gets or Sets the ItemsSource of the DataPager.
            </summary>
            <value>The items source.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.DisplayMode">
            <summary>
            Gets or sets the page display mode for the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.AppearanceManager">
            <summary>
            Gets or set the appearance for the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.PagedSource">
            <summary>
            Gets or Sets the PagedSource of the Pager, which is then assigned to the item source of the grid.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.SfDataGrid.DataPager.SfDataPager.PageCount" -->
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.PageSize">
            <summary>
            Gets or sets the PageSize, used to set total number of rows to be displayed in the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.NumericButtonCount">
            <summary>
            Gets or sets the NumeriButtonCount,used to set number of button need to be displayed.
            </summary>
            <remarks> if NumericButtonCount is greater than View size, then number of button need to be displayed is calculated based on view size </remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.PageIndex">
            <summary>
            Gets or Sets the PageIndex, which indicates the current page index.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.AutoEllipsisMode">
            <summary>
            Gets or sets AutoEllipsisMode for DataPager 
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.UseOnDemandPaging">
            <summary>
            Gets or sets a value indicating whether to enable/disable UseOnDemandPaging or not.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.NumericButtonBackground">
            <summary>
            Gets or sets a Color, which is set as background color of the selected NumericButtons and Navigation Buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.SelectionForeground">
            <summary>
            Gets or sets a Color, which is set as foreground color of the selected NumericButtons.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.AutoEllipsisText">
            <summary>
            Gets or sets the AutoEllipsisText, which is used to display in AutoEllipisisMode.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.Orientation">
            <summary>
            Gets or sets the orientation of the DataPager.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.PageIndexChanged">
            <summary>
            Occurs when PageIndexChanged
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.PageIndexChanging">
            <summary>
            Occurs when PageIndexChanging
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnDemandLoading">
            <summary>
            Occurs when OnDemandLoading the page
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.#ctor(Android.Content.Context)">
            <summary>
            Initialize the instance of SfDataPager
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.MoveToFirstPage">
            <summary>
            Moves to Starting Page 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.MoveToLastPage">
            <summary>
            Moves to End Page 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.MoveToNextPage">
            <summary>
            Moves to Next Page 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.MoveToPreviousPage">
            <summary>
            Moves to Previous Page 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.MoveToPage(System.Int32)">
            <summary>
            Moves to given pageIndex 
            </summary>
            <param name="pageIndex">Index of the Page to be moved</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfDataGrid.DataPager.SfDataPager.LoadDynamicItems(System.Int32,System.Collections.IEnumerable)" -->
        <member name="T:Syncfusion.SfDataGrid.GridCell">
            <summary>
            Represents a record cell in a SfDataGrid control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCell.DataColumn">
            <summary>
            Gets the DataColumn associated with the GridCell.
            </summary>
            <value>An object that represents the DataColumn associated with the GridCell.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the GridCell class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.Initialize">
            <summary>
            Initializes the required properties or methods in GridCell.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the content of a GridCell.
            </summary>
            <param name="left">A value that represents the x coordinate of the child.</param>
            <param name="top">A value that represents the y coordinate of the child.</param>
            <param name="right">A value that represents the width of the child.</param>
            <param name="bottom">A value that represents the height of the child.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridCaptionSummaryCell">
            <summary>
            Represents a caption summary cell in a SfDataGrid control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCell.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the GridCaptionSummaryCell class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCell.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the content of a GridCaptionSummaryCell.
            </summary>
            <param name="left">A value that represents the x coordinate of the child.</param>
            <param name="top">A value that represents the y coordinate of the child.</param>
            <param name="right">A value that represents the width of the child.</param>
            <param name="bottom">A value that represents the height of the child.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.NamespaceDoc">
            <summary>
            Provides classes, interfaces and enumerators to create SfDataGrid, that enable a user to interact with a SfDataGrid. The grid classes allow a user to manipulate the data and performs the SfDataGrid operations like sorting, grouping and filtering in SfDataGrid.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridHeaderCellControl">
            <summary>
            Represents a header cell in a SfDataGrid control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.DataColumn">
            <summary>
            Gets the DataColumn associated with the GridHeaderCellControl.
            </summary>
            <value>An object that represents the DataColumn associated with the GridCell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.RowIndex">
            <summary>
            Gets the row index of the header row.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.ColumnIndex">
            <summary>
            Gets the column index of the header cell.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.Gridcolumn">
            <summary>
            Gets the GridColumn associated with the header cell.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.GridModel">
            <summary>
            Gets the grid model of the SfDataGrid control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.SortDirection">
            <summary>
            Gets or sets the sort direction of the associated GridColumn
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.SortColumn">
            <summary>
            Gets the column that is sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.SortAscend">
            <summary>
            Gets or sets the sort icon based on the sort direction.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridHeaderCellControl.GetDataColumn">
            <summary>
            Gets the associated DataColumn.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of GridHeaderCellControl class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.Initialize">
            <summary>
            Initializes the required components for the GridHeaderCellControl.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfDataGrid.GridHeaderCellControl.Sort" -->
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.OnDraw(Android.Graphics.Canvas)">
            <summary>
            The borders for the header cell is drawn here.
            </summary>
            <param name="canvas">The canvas on which the background will be drawn.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            TextViews loaded inside the GridHeaderCellControl is arranged here. Called from VisualContainer's layout
            when this view should assign a size and position to each of its children. Derived classes with children
            should override this method and call layout on each of their children.
            </summary>
            
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">Left position, relative to parent</param>
            <param name="right">Right position, relative to parent</param>
            <param name="top">Top position, relative to parent</param>
            <param name="bottom">Bottom position, relative to parent</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfDataGrid.GridHeaderCellControl.OnTouchEvent(Android.Views.MotionEvent)" -->
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.Update">
            <summary>
            Updates the header cell components of a column.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VirtualizingCellsControl.IsSwipeCancelled">
            <summary>
            Gets or sets the value to cancel Swipe.
            </summary>
            <value>True if Swipe is cancelled </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VirtualizingCellsControl.DataGrid">
            <summary>
            Gets the instance of the SfDataGrid.
            </summary>       
        </member>
        <member name="P:Syncfusion.SfDataGrid.VirtualizingCellsControl.SwipeDirection">
            <summary>
            Gets or sets the Direction of the Swipe.
            </summary>
            <value>Left if SwipeOffset less than 0 and Right if SwipeOffset greater than 0</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VirtualizingCellsControl.SwipeOffset">
            <summary>
            Gets or sets the SwipeOffset based on the Swipe action.
            </summary>
            <value>Current value of the touch on screen.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.SwipeStarted">
            <summary>
            Raises the SwipeStarted event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.Swiping">
            <summary>
            Raises the Swiping event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.SwipeEnded">
            <summary>
            Raises the SwipeEnded event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CaptionSummaryRowControl.GroupIcon">
            <summary>
            Gets or sets the sort icon based on the sort direction.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CaptionSummaryRowControl.IsExpanded">
            <summary>
            Gets or sets a value indicating whether this instance Expanded or Collapsed.
            </summary>
            <value><see langword="true"/> if this instance ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CaptionSummaryRowControl.LayoutChildElements(Android.Graphics.Rect,Syncfusion.GridCommon.ScrollAxis.VisibleLineInfo,Syncfusion.SfDataGrid.IColumnElement,System.Double,System.Int32,System.Int32,System.Double)">
            <summary>
            Layouts the group expander icon and the caption summary cells inside the CaptionSummaryRow.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CaptionSummaryRowControl.UpdateGroupIconSource">
            <summary>
            Gets the Sort Indicator for the column upon sorting.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridRowHeaderCell">
            <summary>
            Represents a row header cell in the SfDataGrid control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowHeaderCell.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the GridRowHeaderCell class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataColumn">
            <summary>
            Represents one column of data in a SfDataGrid control.
            </summary>
            <remarks>The DataColumn is the fundamental building block for creating the schema of a SfDataGrid control. 
            You build the schema by adding one or more DataColumn objects to the VisibleColumns.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumn.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the DataColumn class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumn.OnInitializeColumnElement(System.Object,System.Boolean)">
            <summary>
            View for the associated column element is created and initialized here.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="isInEdit">A boolean value denoting whether the DataColumn is in editing.</param>
            <returns>The associated column element.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumn.RefreshCellValue">
            <summary>
            Refreshes the cell value of the associated column element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumn.UpdateColumn(System.Object)">
            <summary>        
            Binding of the column element also updated in the renderer when scrolling horizontally.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>        
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataColumnBase">
            <summary>
            Serves as the abstract base class for DataColumn and provides methods and properties to it.
            </summary>
            <remarks>Implements IColumnElement and hence defines properties that must be implemented to generate grid column elements.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.ColumnVisibility">
            <summary>
            Gets or sets a value that indicates whether the DataColumn can be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.NeedToRefresh">
            <summary>
            Gets or sets a value that indicates whether to refresh the column.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.IsEditing">
            <summary>
            Gets or sets a value that indicates whether the DataColumn is in editing.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.SelectionController">
            <summary>
            Gets or sets a reference to the GridSelectionController instance that handles the selection in a <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.ColumnIndex">
            <summary>
            Gets the column index of the DataColumn.
            </summary>
            <value>A value that determines the column index of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.RowIndex">
            <summary>
            Gets the row index of the DataColumn.
            </summary>
            <value>A value that determines the row index of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.GridColumn">
            <summary>
            Gets the GridColumn associated with the DataColumn.
            </summary>
            <value>An object that represents the <see cref="!:Syncfusion.SfDataGrid.XForms.GridColumn"/> associated with the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.RowData">
            <summary>
            Gets the data object associated with the DataColumn.
            </summary>
            <value>An object that represents the underlying data associated with the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.CellValue">
            <summary>
            Gets the cell value of the column element associated with the DataColumn.
            </summary>
            <value>An object that represents the cell value DataColumn.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.OnColumnVisibilityChanged">
            <summary>
            Occurs when the ColumnVisibility is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.OnRowIndexChanged">
            <summary>
            Occurs when the RowIndex is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.OnColumnIndexChanged">
            <summary>
            Occurs when the ColumnIndex is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.OnCellValueChanged">
            <summary>
            Occurs when the CellValue is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.OnRowDataChanged">
            <summary>
            Occurs when the RowData is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.InitializeColumnElement(System.Object,System.Boolean)">
            <summary>
            Initializes the ColumnElement.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="isInEdit">A boolean value denoting whether the DataColumn is in editing.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.GetDataColumn">
            <summary>
            Returns an instance of the DataColumnBase class.
            </summary>
            <returns>An instance of the DataColumnBase class.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.RaisePointerTouchUp(Android.Views.MotionEvent)">
            <summary>
            Raise the PointerPressed method in the selection controller
            </summary>
            <param name="args">An <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs">PointerRoutedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.RaiseLongPressedEvent">
            <summary>
            Raise the RaiseGridLongPressed method in the datagrid.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.RaiseDoubleTappedEvent">
            <summary>
            Raise the RaiseGridDoubleTapped method in the datagrid.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.OnInitializeColumnElement(System.Object,System.Boolean)">
            <summary>
            View for the associated column element is created and initialized here.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="isInEdit">A boolean value denoting whether the DataColumn is in editing.</param>
            <returns>The associated column element.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.RefreshCellValue">
            <summary>
            Refreshes the cell value of the associated column element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.UpdateColumn(System.Object)">
            <summary>
            Updates the CellValue and the BindingContext of the column element when scrolling vertically.
            Binding of the column element also updated in the renderer when scrolling horizontally.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="updateBinding">A boolean value to decide whether to update the Binding of the ColumnElement.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Syncfusion#SfDataGrid#IElement#Element">
            <summary>
            Gets the column element associated with the DataColumn.
            </summary>
            <value>An object that represents the column element associated with the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Syncfusion#SfDataGrid#IElement#Index">
            <summary>
            Gets the column index of the DataColumn.
            </summary>
            <value>A value that determines the column index of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Renderer">
            <summary>
            Gets the renderer associated with the column element.
            </summary>
            <value>The renderer associated with the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Syncfusion#SfDataGrid#IColumnElement#RowSpan">
            <summary>
            Gets the row span of the column element.
            </summary>
            <value>A value that determines the row span of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Syncfusion#SfDataGrid#IColumnElement#ColumnSpan">
            <summary>
            Gets the column span of the column element.
            </summary>
            <value>A value that determines the column span of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Syncfusion#SfDataGrid#IColumnElement#RowIndex">
            <summary>
            Gets the row index of the DataColumn
            </summary>
            <value>A value that determines the row index of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Syncfusion#SfDataGrid#IColumnElement#IsEditing">
            <summary>
            Gets or sets a value that indicates whether the DataColumn is in editing.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.Dispose">
            <summary>
            Perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataRow">
            <summary>
            Represents a row of data in a SfDataGrid control.
            </summary>
            <remarks>The DataRow and DataColumn objects are primary components of a SfDataGrid control.
            The Items collection represents the actual DataRow objects in the SfDataGrid,
            and the VisibleColumns collection contains the <see cref="!:Syncfusion.SfDataGrid.XForms.DataColumn"/> objects that describe the schema of the SfDataGrid.</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfDataGrid.DataRow.#ctor" -->
        <member name="M:Syncfusion.SfDataGrid.DataRow.OnCreateRowElement">
            <summary>
            View for the associated row element is created and initialized here.
            </summary>
            <returns>The associated row element.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.OnGenerateVisibleColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Generates the column elements that occupy the view space for the first time.
            </summary>
            <param name="visibleColumnLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.EnsureColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensures the column elements that has to be arranged in the view.
            </summary>
            <param name="visibleColumnLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.UpdateRow">
            <summary>
            Updates the DataRow.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.UpdateRowStyles(Android.Widget.FrameLayout)">
            <summary>
            Updates the row style applied to the row element.
            </summary>
            <param name="row">The row element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.OnRowIndexChanged">
            <summary>
            Occurs when the RowIndex is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.ApplyRowStyle(Android.Widget.FrameLayout)">
            <summary>
            Applies the appropriate background color for the row element.
            </summary>
            <param name="row">A DataRow object.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.CreateColumn(System.Int32,System.Int32)">
            <summary>
            Creates and returns a new instance of the DataColumn class initialized with the required values.
            </summary>
            <param name="index">The column index.</param>
            <param name="columnHeightIncrementation">The column height incrementation.</param>
            <returns>Returns a new instance of the DataColumn class initialized with the required values.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.UpdateColumn(Syncfusion.SfDataGrid.DataColumnBase,System.Int32)">
            <summary>
            Updates an associated DataColumn object with the properties and values based on the new column when scrolling horizontally.
            </summary>
            <param name="dc">A DataColumn object.</param>
            <param name="index">The column index.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfDataGrid.DataRow.UpdateRenderer(Syncfusion.SfDataGrid.DataColumnBase,Syncfusion.SfDataGrid.GridColumn)" -->
        <member name="M:Syncfusion.SfDataGrid.DataRow.UpdateRowInfo(System.Int32)">
            <summary>
            Updates the row information and the DataColumn objects associated with the DataRow.
            </summary>
            <param name="rowIndex">The row index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.indexer(System.Int32)">
            <summary>
            Returns the DataColumn if the cell with the passed index is available in VisibleColumns.
            </summary>
            <param name="index">The columnIndex of the dataColumn that has to be searched for.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.indexer(System.Int32,System.Int32)">
            <summary>
            Returns a DataColumn if it is not in view and can be reused. Otherwise returns null.
            </summary>
            <param name="startColumnIndex">The starting column index of the DataColumn in the view.</param>
            <param name="endColumnIndex">The ending column index of the DataColumn in the view.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataRowBase">
            <summary>
            Serves as the abstract base class for GridDataRow and provides methods and properties to it.
            </summary>
            <remarks>Implements IRowElement and hence defines properties that must be implemented to generate grid row elements.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.IsEditing">
            <summary>
            Gets or sets a value that indicates whether the DataRow is in editing.
            </summary>
            <value><b>true</b> if the row element is in editing; otherwise, <b>false</b>. The default is <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.RowData">
            <summary>
            Gets the data object associated with the DataRow.
            </summary>
            <value>An object that represents the underlying data associated with the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.IsEnsured">
            <summary>
            Gets or sets a boolean value denoting whether the DataRow is ensured in view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.RowIndex">
            <summary>
            Gets the row index of the DataRow.
            </summary>
            <value>A value that determines the row index of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.RowType">
            <summary>
            Gets the RowType of the DataRow.
            </summary>
            <value>An object that represents the RowType of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.IsSelectedRow">
            <summary>
            Gets or sets a boolean value denoting whether the DataRow is selected row.
            </summary>
            <value><b>true</b> if the row element is selected; otherwise, <b>false</b>. The default is <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.RowVisibility">
            <summary>
            Gets or sets a value that indicates whether the DataRow can be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.VisibleColumns">
            <summary>
            Gets the collection of DataColumn objects associated with the DataRow.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.SelectionClipRect">
            <summary>
            Gets or sets the selection clip rectangle.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.OnRowDataChanged">
            <summary>
            Occurs when the RowData is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.OnRowIndexChanged">
            <summary>
            Occurs when the row index is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.OnRowVisibilityChanged">
            <summary>
            Occurs when the row visibility is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.#ctor">
            <summary>
            Initializes a new instance of the DataRowBase class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.InitializeDataRow(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Initializes the DataRow.
            </summary>
            <param name="visibleColumnsLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.OnCreateRowElement">
            <summary>
            View for the associated row element is created and initialized here.
            </summary>
            <returns>The associated row element.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.OnGenerateVisibleColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Generates the column elements that occupy the view space for the first time.
            </summary>
            <param name="visibleColumnLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.EnsureColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensures the column elements that has to be arranged in the view.
            </summary>
            <param name="visibleColumnLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.UpdateRowStyles(Android.Widget.FrameLayout)">
            <summary>
            Updates the row style applied to the row element.
            </summary>
            <param name="row">The row element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.UpdateRow">
            <summary>
            Updates the DataRow.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.GetDataRow">
            <summary>
            Returns an instance of the DataRowBase class.
            </summary>
            <returns>An instance of the DataRowBase class.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.GetVisibleColumns">
            <summary>
            Returns the list of column elements associated with the DataRow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.Tolist(System.Collections.Generic.List{Syncfusion.SfDataGrid.DataColumnBase})">
            <summary>
            Converts the given list of DataColumnBase objects to an IList of IColumnElement and returns it.
            </summary>
            <param name="items">The list of DataColumnBase objects.</param>
            <returns>An IList of IColumnElement objects.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.CollapseColumn(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Collapses the visibility of the given DataColumn.
            </summary>
            <param name="column">A DataColumn instance.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.RowManipulation(Android.Graphics.Rect)">
            <summary>
            Manipulates the position of the DataRow based on the given rectangle value.
            </summary>
            <param name="rect">The rectangle.</param>
            <returns>The rectangle value for arranging the DataRow.</returns>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.Syncfusion#SfDataGrid#IElement#Element">
            <summary>
            Gets the row element associated with the DataRow.
            </summary>
            <value>An object that represents the row element associated with the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.Syncfusion#SfDataGrid#IElement#Index">
            <summary>
            Gets the row index of the DataRow.
            </summary>
            <value>A value that determines the row index of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.Syncfusion#SfDataGrid#IRowElement#RowRegion">
            <summary>
            Gets the row region of the DataRow.
            </summary>
            <value>An object that represents the RowRegion of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.Level">
            <summary>
            Gets the row level of the DataRow.
            </summary>
            <value>An object that represents the row level of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.Syncfusion#SfDataGrid#IRowElement#RowType">
            <summary>
            Gets the RowType of the DataRow.
            </summary>
            <value>An object that represents the RowType of the DataRow.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.UnloadUIElements(Syncfusion.SfDataGrid.DataRowBase,Syncfusion.SfDataGrid.DataColumnBase)">
            XAMARIN-284
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.UpdateGroupExpander(Syncfusion.SfDataGrid.SpannedDataRow,Syncfusion.Data.Group)">
            <summary>
            Method which helps to update the expander position and expanded state
            </summary>
            <param name="row"></param>
            <param name="group"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.PregenerateRows">
            <summary>
            Generates the RowPanels that occupy the view space for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.EnsureRows(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection,Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
             Ensures the rows that are available in the view.
             </summary>
             
             <param name="visibleRows">The visible row lines.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.EnsureColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
             Ensures the columns in each row.
             </summary>
             
             <param name="visibleColumns">The visible column lines.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.indexer(System.Int32)">
            <summary>
            Returns the DataRow if the row with the passed index is available in the items.
            </summary>
            
            <param name="index">The rowIndex of the datarow that has to be searched for.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.indexer(System.Int32,Syncfusion.SfDataGrid.RowRegion)">
            <summary>
             Returns the DataRow if the row with the passed index and region is available in the items.
             </summary>
             
             <param name="index">The rowIndex of the datarow that has to be searched for.</param>
             <param name="region">The region of the dataRow that has to be searched for.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.indexer(System.Int32,System.Int32)">
            <summary>
             Returns a DataRow if it is not in view and can be reused. Otherwise returns null.
             </summary>
             
             <param name="actualStartIndex">The starting rowIndex of the dataRow in the view.</param>
             <param name="actualEndIndex">The ending rowIndex of the dataRow in the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.columnIndexer(Syncfusion.SfDataGrid.DataRowBase,System.Int32)">
            <summary>
            Returns the DataColumn if the column with the passed index is available in the VisibleColumns.
            </summary>
            
            <param name="row">The row in which the column has to be searched for.</param>
            <param name="index">The columnIndex of the dataColumn that has to be searched for.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.CellBorderStyle">
            <summary>
            Enum based on which border appearance is decided.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CellBorderStyle.Both">
            <summary>
            Specifies that both vertical and horizontal borders are visible.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CellBorderStyle.Horizontal">
            <summary>
            Specifies that only horizontal borders are visible
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CellBorderStyle.Vertical">
            <summary>
            Specifies that only vertical borders are visible.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CellBorderStyle.None">
            <summary>
            Specifies that no borders are visible.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ScrollingMode.Pixel">
            <summary>
            Lets the grid to scroll based on pixel values.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ScrollingMode.Line">
            <summary>
            Lets the grid to scroll based on line values.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ScrollingMode.PixelLine">
            <summary>
            Lets the grid to scroll based on pixel values and auto scrolls to the start or end or a row or column based on the clipped value.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.LoadMoreViewPosition.Bottom">
            <summary>
            Positions the LoadMoreView at the bottom of the DataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.LoadMoreViewPosition.Top">
            <summary>
            Positions the LoadMoreView at the top of the DataGrid below the header.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ColumnSizer.None">
            <summary>
            No Sizing
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ColumnSizer.LastColumnFill">
            <summary>
            The unit of measure is based on the default column size with Last column fill.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ColumnSizer.Star">
            <summary>
            The unit of measure is a weighted proportion of the available space.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ColumnSizer.Auto">
            <summary>
            The unit of measure is based on the maximum content size of either the header or record data.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.AutoGenerateColumnsMode">
            <summary>
            Enum based on which auto generated columns are created.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.AutoGenerateColumnsMode.Reset">
            <summary>
            Creates columns for all fields in a data source, Retain the columns added by the user.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.AutoGenerateColumnsMode.RetainOld">
            <summary>
            Creates columns for all fields in a data source if the grid doesn't contain any columns else retain old columns.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.AutoGenerateColumnsMode.ResetAll">
            <summary>
            Creates columns for all fields in a data source removing all old columns.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.AutoGenerateColumnsMode.SmartReset">
            <summary>
            Creates columns for all fields in a data source, Retain the columns added by the user and the columns that matches in the new ItemsSource.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.AutoGenerateColumnsMode.None">
            <summary>
            Keep only the columns that are added by the user.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SwipeDirection">
            <summary>
            Enum based on which SwipeDirection is calculated.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.SwipeDirection.Left">
            <summary>
            Specifies that the swiping is made in the left direction.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.SwipeDirection.Right">
            <summary>
            Specifies that the swiping is made in the right direction.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SortTapAction">
            <summary>
            Enum indicating whether to sort data on Single Tap or Double Tap.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.SortTapAction.SingleTap">
            <summary>
            Specifies that sorting happens at a single tap.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.SortTapAction.DoubleTap">
            <summary>
            Specifies that sorting happens at a double tap.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridLinesVisibility">
            <summary>
            Enum based on which border appearance is decided.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridLinesVisibility.Both">
            <summary>
            Specifies that both vertical and horizontal borders are visible.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridLinesVisibility.Horizontal">
            <summary>
            Specifies that only horizontal borders are visible
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridLinesVisibility.Vertical">
            <summary>
            Specifies that only vertical borders are visible.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridLinesVisibility.None">
            <summary>
            Specifies that no borders are visible.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.QueryColumnDraggingReason">
            <summary>
            Specifies the reason for column dragging operation.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.QueryColumnDraggingReason.DragStarted">
            <summary>
            Specifies the dragging operation after initialized on the column.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.QueryColumnDraggingReason.Dragging">
            <summary>
            Specifies the column is being dragged in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.QueryColumnDraggingReason.DragEnded">
            <summary>
            Specifies the column dragging operation ended.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.QueryRowDraggingReason">
            <summary>
            Specifies the reason for row dragging operation.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.QueryRowDraggingReason.DragStarted">
            <summary>
            Specifies the dragging operation after initialized on the row.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.QueryRowDraggingReason.Dragging">
            <summary>
            Specifies the row is being dragged in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.QueryRowDraggingReason.DragEnded">
            <summary>
            Specifies the row dragging operation ended.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.LineBreakMode">
            <summary>
            Enum based on which text wrapping is decided.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.LineBreakMode.WordWrap">
            <summary>
            Specifies that long text should wrap.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.LineBreakMode.NoWrap">
            <summary>
            Specifies that long text should not wrap.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.ExpressionError">
            <summary>
            Defines the constants that specify the possible expression error in GridUnboundColumn.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ExpressionError.None">
            <summary>
            No expression error .
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ExpressionError.MissingRightQuote">
            <summary>
            Specifies that error will be occurred when the right quotation is missed in expression.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ExpressionError.MismatchedParentheses">
            <summary>
            Specifies that error will be occurred when the expression has mismatched parentheses.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ExpressionError.CannotCompareDifferentTypes">
            <summary>
            Specifies that error will be occurred when the expression has compared between mismatched types.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ExpressionError.UnknownOperator">
            <summary>
            Specifies that error will be occurred when the expression contains unknown operator.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ExpressionError.NotAValidFormula">
            <summary>
            Specifies that error will be occurred when the expression has an invalid formula.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ExpressionError.ExceptionRaised">
            <summary>
            Specifies that will be raised when the expression has unknown exception .
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridQueryBounds">
            <summary>
            Defines constant that specify whether the column width need to be calculated based on the cell content.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridQueryBounds.Width">
            <summary>
            The column width can be calculated based on cell content. 
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridQueryBounds.Height">
            <summary>
            The row height can be calculated based on cell content. 
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.VerticalOverScrollMode.Bounce">
            <summary>
            Specifies that bounce effect is applied when vertically overscrolled
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.VerticalOverScrollMode.None">
            <summary>
            Specifies that no effect is applied when vertically overscrolled
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridIndexResolver.ResolveStartIndexOfGroup(Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.Data.Group)">
            <summary>
            Resolves the start index of the specified group.
            </summary>
            <param name="dataGrid">The SfDataGrid.</param>
            <param name="group">Specifies the group to get its corresponding start index.</param>
            <returns>The start index of the specified group; returns -1; if the column is not grouped in SfDataGrid./// </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridIndexResolver.GetVisibleHeaderCount(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Gets the visible header rows count.
            </summary>
            <param name="dataGrid">The SfDataGrid.</param>
            <returns>The visible header count.</returns>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridSortColumnsChangedEventArgs.AddedItems">
            <summary>
            Gets the added items.
            </summary>
            <value>The added items.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridSortColumnsChangedEventArgs.RemovedItems">
            <summary>
            Gets the removed items.
            </summary>
            <value>The removed items.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridSortColumnsChangedEventArgs.Action">
            <summary>
            Gets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridSortColumnsChangingEventArgs.AddedItems">
            <summary>
            Gets the added items.
            </summary>
            <value>The added items.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridSortColumnsChangingEventArgs.RemovedItems">
            <summary>
            Gets the removed items.
            </summary>
            <value>The removed items.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridSortColumnsChangingEventArgs.Action">
            <summary>
            Gets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.ColumnSizer">
            <summary>
            Gets or sets the value that indicates how the column width is determined.
            </summary>
            <value>
            One of the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ColumnSizer"/> enumeration that adjust the column
            width.
            The default value is <see cref="!:Syncfusion.SfDataGrid.SfDataGrid.ColumnSizer.None"/>.
            </value>      
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.LineBreakMode">
            <summary>
            Gets or sets the line break mode for the cells in the column.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.HeaderTemplate">
            <summary>
            Gets or sets the view used to display the header of the current Column.
            </summary>
            <value>The view.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.IsUnbound">
            <summary>
            Gets or sets whether the GridColumn is an UnboundColumn.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.IsHidden">
            <summary>
            Gets or sets whether the GridColumn is hidden or unhidden.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.OnCaptionSummaryRowChanged(Syncfusion.SfDataGrid.GridSummaryRow)">
            <summary>
            Method which helps to update the view when change the Caption Summary Row
            </summary>
            <param name="row"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.GetSortColumnsNotInGroupColumns">
            <summary>
            Method which helps to get the SortColumn which are not in the GroupedColumns
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.GetSortDescriptionNotInGroupDescription">
            <summary>
            Method which helps to get the unavailable sort description which property names is not in group description
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.ResetColumns">
            <summary>
            Method which helps to reset the column count and column indexes when group added or removed
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.CheckForExistingGroupDescription(System.String)">
            <summary>
            Check whether the GroupDescription is already present in Groupdescriptions or not
            </summary>
            <param name="columnName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.CheckForExistingGroupColumn(System.String)">
            <summary>
            Check whethe the corresponding column name already present in GropColumns  or not.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.Suspend">
            <summary>
            Method helps to suspand all the collection change update when doing grouping operatrions 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.Resume">
            <summary>
            Method helps to suspand all the collection change update when doing grouping operatrions 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.RefreshView(System.Int32,System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction,System.Int32,System.Int32)">
            <summary>
            Refreshs the view.
            When the RowIndex not in a visible region
            </summary>
            <param name="rowIndex">Row index.</param>
            <param name="count">Count.</param>
            <param name="action">Action.</param>
            <param name="recordIndex">Record index.</param>
            <param name="recordCount">Record count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.UpdateDataRow(System.Int32,System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the data row.
             When the RowIndex is in a visible region
            </summary>
            <param name="index">Index.</param>
            <param name="count">Count.</param>
            <param name="action">Action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.UpdateView(System.Int32,System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the view.
            inserts the visible line when row index is in visible region
            </summary>
            <param name="index">Index.</param>
            <param name="count">Count.</param>
            <param name="action">Action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.MakeSort(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Make the sort and remove the sort, 
            hits when header cell is touched 
            <see cref="T:Syncfusion.SfDataGrid.SortColumnDescription" />property in grid
            Adds and clears SortDescription of the SortColumnDescriptions property in datagrid
            </summary>
            <param name="gridcolumn">Gridcolumn.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.OnSortDescriptionsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
             <summary>
             Raises the sort descriptions changed event.
            checks whether sort description needs to add,delete,remove,replace when sort description changes
             </summary>
             <param name="sender">Sender.</param>
             <param name="e">E.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.DataGrid_SortColumnDescriptions_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the sort columns changed event.
            checks whether sort description needs to add,delete,remove,replace not when sort description changes
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">E.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.RaiseSortColumnsChanging(System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Raises the sort columns changing.
            call datagrid rise column changing method to check whether SortColumnChanged event is called or not
            </summary>
            <returns><c>true</c>, if sort columns changing was raised, <c>false</c> otherwise.</returns>
            <param name="addedColumns">Added columns.</param>
            <param name="removedColumns">Removed columns.</param>
            <param name="action">Action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.RaiseSortColumnsChanged(System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Raises the sort columns changed.
            call datagrid rise column changed method to check whether SortColumnChanging event is called or not
            </summary>
            <param name="addedColumns">Added columns.</param>
            <param name="removedColumns">Removed columns.</param>
            <param name="action">Action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.ExpandGroupsAtLevel(System.Collections.Generic.List{Syncfusion.Data.Group},System.Int32)">
            <summary>
            Method which helps to expand all the groups in Specific level
            </summary>
            <param name="groups"></param>
            <param name="groupLevel"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.CollapseGroupsAtLevel(System.Collections.Generic.List{Syncfusion.Data.Group},System.Int32)">
            <summary>
            Method which helps to collapse all the groups in Specific level
            </summary>
            <param name="groups"></param>
            <param name="groupLevel"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.ExpandGroup(Syncfusion.Data.Group)">
            <summary>
            Method which helps to expand the specific group by passing the corresponding group
            </summary>
            <param name="group"></param>
            <returns>Returns whether this expanding action is succeeded or failed</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.CollapseGroup(Syncfusion.Data.Group)">
            <summary>
            Method which helps to collapse the specific group by paasing the corresponding group
            </summary>
            <param name="group"></param>
            <returns> Returns whether this collapsing action is succeeded or failed</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridQueryableCollectionViewWrapper.GetUnboundFunc(Syncfusion.SfDataGrid.GridUnboundColumn)">
            <summary>
            Gets Unbound Func Value for sorting and grouping
            </summary>
            <param name="column">Specifies the current column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridQueryableCollectionViewWrapper.GetDataGrid">
            <summary>
            Gets the dataGrid present in the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridQueryableCollectionViewWrapper.GetExpressionFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns Expression Func for UnboundColumns for Sorting and Grouping.
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
            <remarks></remarks>
            
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfDataGrid.CollectionViewExtensions.GetValueFunc(Syncfusion.Data.CollectionViewAdv,Syncfusion.SfDataGrid.GridColumn)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfDataGrid.CollectionViewExtensions.GetValueExpressionFunc(Syncfusion.Data.CollectionViewAdv,Syncfusion.SfDataGrid.GridColumn)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfDataGrid.CollectionViewExtensions.GetUnboundFunc(Syncfusion.Data.CollectionViewAdv,Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.SfDataGrid.GridUnboundColumn)" -->
        <member name="T:Syncfusion.SfDataGrid.GridDataTableCollectionViewWrapper">
            <summary>
            A class that enables collections to have the functionalities of current record management, custom sorting, filtering, and grouping when a DataTable collection is bound.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataTableCollectionViewWrapper.GetDataGrid">
            <summary>
            Gets the dataGrid present in the view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GroupColumnDescription.ColumnName">
            <summary>
            Gets or sets the Column Name for grouping
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GroupColumnDescription.Converter">
            <summary>
            Gets or sets the converter for Custom grouping.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SortColumnDescription.ColumnName">
            <summary>
            Gets or sets the name of the column.
            </summary>
            <value>The name of the column.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SortColumnDescription.SortDirection">
            <summary>
            Gets or sets the sort direction.
            </summary>
            <value>The direction.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.updateOffsetForPixelLineScrolling">
            <summary>
            Assigns the horizontal and vertical offset values based on line ScrollOffset and ClippedSize, 
            to achieve LineScrolling.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.IsChildInSwipe">
            <summary>
            Gets or sets a value indicating whether any child is in swipe.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.VisibleColumnsCount">
            <summary>
            Gets the visible columns count in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.HScrollBar">
            Gets the horizontal scroll bar.
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.VScrollBar">
            Gets the vertical scroll bar.
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.RowHeights">
            Gets the row heights from the LineSizeCollection.
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ColumnWidths">
            Gets the column widths from the LineSizeCollection
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ScrollRows">
            Gets the scroll rows from the ScrollAxisBase.
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ScrollColumns">
            Gets the scroll columns from the ScrollAxisBase.
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.VerticalPixelScroll">
            Gets or sets the vertical pixel scroll.
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.HorizontalPixelScroll">
            Gets or sets the horizontal pixel scroll.
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.OnMeasure(System.Int32,System.Int32)">
             Creates the RowPanels and GridCells for the first time and ensure them every time the measure is hit.
             Measures the constraint of the child and send the Measured dimensions to the super to adjust the scrolling area.
            
             @param widthMeasureSpec The width of the visual container. Initially assigned the value of view width.
             @param heightMeasureSpec The height of the visual container. Initially assigned the value of the view height.
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
             Arranges the RowPanels inside the VisualContainer.
            
             @param changed Indicates whether the layout has changed or not.
             @param left The current extreme left position of the VisualContainer.
             @param top The current top position of the VisualContainer.
             @param right The current right extreme position of the VisualContainer.
             @param bottom The current bottom position of the VisualContainer.
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.OnCreateRowHeights">
            Creates a new instance of LineSizeCollection for creating the row heights.
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.OnCreateColumnWidths">
            Creates a new instance of LineSizeCollection for creating the column widths.
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.Initialize">
            Initializes the VisualContainer with the required elements.
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.createScrollAxis(System.Boolean,Syncfusion.GridCommon.ScrollAxis.IScrollBar,Syncfusion.GridCommon.ScrollAxis.ILineSizeHost)">
             Creates a new instance of pixel scroll axis.
            
             @param orientation Orientation of the scroll.
             @param pixelScroll Specifies whether the scrolling is pixel scrolling or not.
             @param scrollBar The scroll bar of the specified orientation
             @param lineSizes The size of the lines in the specified orientation.
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.pregenerateItems">
            Generates the items that occupy the view space for the first time.
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.ensureItems(System.Boolean)">
             Ensures the rows and columns that are available in the view.
            
             @param needToRefresh bool value specifying whether the columns also need to be ensured.
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.updateAxis(System.Drawing.Size)">
            Updates the render size of the horizontal and vertical axis.
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.getRowVisibleLineInfo(System.Int32)">
             Gets the line information of the specified row index.
            
             @param index The lineIndex of the line that has to be returned.
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.getColumnVisibleLineInfo(System.Int32)">
             Gets the line information of the specified column index.
            
             @param index The lineIndex of the line that has to be returned.
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.resetScrollRows">
            Resets the scrollRows to null.
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.resetScrollColumns">
            Resets the scrollColumns to null.
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.HorizontalOffset">
            Gets or sets the horizontal offset.
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.VerticalOffset">
            Gets or sets the vertical offset.
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ScrollOwner">
            Gets or sets the scroll viewer.
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ExtentHeight">
            Gets the total extent height of the visual container.
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ExtentWidth">
            Gets the total extent width of the visual container.
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ViewportHeight">
            Gets the viewport height of the visual container.
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ViewportWidth">
            Gets the viewport width of the visual container.
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridCellRendererBase">
            <summary>
            The <see cref="T:Syncfusion.SfDataGrid.GridCellRendererBase"/> class provides a default implementation of the <see cref="T:Syncfusion.SfDataGrid.IGridCellRenderer"/> interface
            for a cell renderer. You should derive from this class to implement custom cell renderer classes. There is however no 
            dependency on GridCellRendererBase inside of the control. 
            <para/>
            If you want to implement a renderer with support for live views inside the cell you should derive from the 
            <see cref="!:VirtualizingCellRendererBase&lt;T&gt;"/> or grid adapted VirtualizingCellRendererBase classes.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.SupportsRenderOptimization">
            <summary>
            Gets or sets whether the renderer supports rendering itsself directly to the drawing context. When this is possible the 
            UIElement will only be created when the user moves the mouse over the cell or if the UIElement is needed for other reasons, 
            e.g. animate after change. The benefit of rendering directly to the DrawingContext instead of creating the UIElement 
            is a much improved scrolling performance. The default value is false.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.CurrentCellIndex">
            <summary>
            Returns the cell's row column index.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.CurrentCellElement">
            <summary>
            Returns the view of current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.CurrentCellRendererElement">
            <summary>
            Returns the content of the current cell element.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.IsInEditing">
            <summary>
            Returns true if the current cell is in editing, or else returns false.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.OnLayout(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.Layout(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)"/> to arrange the GridCell's children view(s).
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="view">Corresponding UiElement</param>
            <param name="left">left end of the cell for arranging the view</param>
            <param name="top">top value for arranging the view</param>
            <param name="right">right end of the cell for arranging the view</param>
            <param name="bottom">bottom value for arranging the view</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.OnMeasure(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.Measure(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32)"/> to Measure the GridCell's children view(s). 
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="view">Corresponding view</param>
            <param name="widthMeasureSpec">Corresponding width for measuring the view size</param>
            <param name="heightMeasureSpec">Corresponding height for measuring the view size</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.OnPrepareViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.PrepareUIViews"/> to prepare the GridCell's children view(s).
            VirtualizingCellRendererBase overrides this method and creates new views and wires them with the parent cells control.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="rowData">Record for the coresponding row</param>
            <returns>Returns the columnElement of the cell</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.OnUnloadViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.UnloadUIViews"/> after a cell is scrolled out of view.
            VirtualizingCellRendererBase overrides this method and either removes the cell renderer visuals from the parent canvas
            or hide them and reuse it later in same canvas depending on whether GridVirtualizingCellRendererBase.AllowRecycle was set.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.OnUpdateColumnInfo(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.UpdateColumnInfo(Syncfusion.SfDataGrid.DataColumnBase)"/> to update the value of the Cell view corresponding to GridColumn.
            In our control we are reusing the cell views for horizontal scrolling. Hence we need to update the value of the cell view.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="rowData">Record for the coresponding row</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="!:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UpdateCellValue"/> to update the cell value of the column element. 
            </summary>
            <param name="dataColumn"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.OnRefreshDisplayValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.UpdateCellStyle"/> to update the cell appearance as per the customer need through API's. 
            In our control we are reusing the cell views for scrolling. Hence we need to update the styles of the cell views.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.DataGrid">
            <summary>
            The SfDataGrid
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.Context">
            <summary>
            Gets and returns the context of the datagrid.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.IsEditable">
            <summary>
            Gets or sets a value that indicates whether the cell is editable.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.HasCurrentCellState">
            <summary>
            Specifies whether the cell state for the current cell has been set.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.Layout(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Renderer will arrange the views using this method
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="view">Corresponding UiElement</param>
            <param name="left">left end of the cell for arranging the view</param>
            <param name="top">top value for arranging the view</param>
            <param name="right">right end of the cell for arranging the view</param>
            <param name="bottom">bottom value for arranging the view</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.Measure(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32)">
            <summary>
            Method which is used by the renderer to Measure the Cell views.
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="view">Corresponding view</param>
            <param name="widthMeasureSpec">Corresponding width for measuring the view size</param>
            <param name="heightMeasureSpec">Corresponding height for measuring the view size</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.PrepareViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to create and initiate the view for Cell
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="rowData">Record for the coresponding row</param>
            <returns>Returns the columnElement of the cell</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.UnloadViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.UnloadUIViews"/> after a cell is scrolled out of view.
            VirtualizingCellRendererBase overrides this method and either removes the cell renderer visuals from the parent canvas
            or hide them and reuse it later in same canvas depending on whether GridVirtualizingCellRendererBase.AllowRecycle was set.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.RefreshDisplayValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to update the style info of the Cell
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.Syncfusion#SfDataGrid#IGridCellRenderer#UpdateColumnInfo(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to Update the Binding Information of the Cell UIElement
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="rowData">Record for the coresponding row</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.UpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to update the cell value.
            </summary>
            <param name="dataColumn"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.GetControlValue">
            <summary>
            Returns the current cell value, only if the renderer's HasCurrentCellState is true
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.SetControlValue(System.Object)">
            <summary>
            Set the current cell value, only if the renderer's HasCurrentCellState is true
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.SetCurrentCellState(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Boolean,System.Boolean)">
            <summary>
            Update the current cell information in the renderer while current cell was activated.
            </summary>
            <param name="currentCellIndex">CurrentCell Index</param>
            <param name="currentCellElement">CurrentCell UIElement</param>
            <param name="isInEditing">Indicates whether the view is in edit mode</param>
            <param name="isFocused">Indicates whether the cell is focused</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.ResetCurrentCellState">
            <summary>
            Reset the current cell information in renderer when the current cell is deactivated.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.BeginEdit(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,Syncfusion.SfDataGrid.GridColumn,System.Object)">
            <summary>
            Current cell enters into edit mode 
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="cellElement">Corresponding Cell Element</param>
            <param name="column">Corresponding Grid Column</param>
            <param name="rowData">Corresponding Record of the Row </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.EndEdit(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,Syncfusion.SfDataGrid.GridColumn,System.Object)">
            <summary>
            current cell Leave the edit mode. 
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="cellElement">Corresponding Cell Element</param>
            <param name="column">Corresponding Grid Column</param>
            <param name="rowData">Corresponding Record of the Row </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.CanUpdateBinding(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Determines whether the binding for the column can be updated. 
            Implement this method to update binding on particular renderer when the data context is set.
            </summary>
            <returns>
            Returns <b>true</b> if the binding is updated for the column.
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.Dispose">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.SfDataGrid.GridCellRendererBase">GridCellRendererBase</see>.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridCellRendererCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.SfDataGrid.GridCellRendererBase"/> objects in the view.
            </summary>
            <remarks>
            On the <see cref="T:Syncfusion.SfDataGrid.Columns"/>, you access the <see cref="T:Syncfusion.SfDataGrid.GridCellRendererCollection"/> through the <see cref="!:Columns.CellRenderers"/> property.
            <para/>
            The <see cref="T:Syncfusion.SfDataGrid.GridCellRendererCollection"/> uses standard <see cref="M:Syncfusion.SfDataGrid.GridCellRendererCollection.Add(System.String,Syncfusion.SfDataGrid.IGridCellRenderer)"/> and <see cref="M:Syncfusion.SfDataGrid.GridCellRendererCollection.Remove(System.String)"/>
            methods to manipulate the collection.
            Use the Contains method to determine if a specific cell type exists in the collection.
            </remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererCollection.Item(System.String)">
            <summary>
            Indexer will return the correspoding renderer for the corresponding Key value.
            </summary>
            <param name="key"></param>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererCollection.Values">
            <summary>
            Get the Renderers in the collection
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererCollection.Keys">
            <summary>
            Get the Key values of Renderes
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="T:System.ComponentModel.Component"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.Add(System.String,Syncfusion.SfDataGrid.IGridCellRenderer)">
            <summary>
            Add the Renderers to the Renderer dictionary.
            </summary>
            <param name="key"></param>
            <param name="renderer"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.Remove(System.String)">
            <summary>
            Remove the Renderer from dictionary for corresponding key value
            </summary>
            <param name="key"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.ContainsKey(System.String)">
            <summary>
            Checks whether the Renderer Dictionary contains the Corresponding Renderer Key.
            </summary>
            <param name="key"></param>
            <returns>Returns true if the Key is found in the Dictionary, otherwise false.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.ContainsValue(Syncfusion.SfDataGrid.GridCellRendererBase)">
            <summary>
            Cheks whether the Render Dictionary contains the corresponding renderer.
            </summary>
            <param name="cellRenderer"></param>
            <returns>Returns true if the renderer is found in the Dictionary, otherwise false.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.CopyTo(Syncfusion.SfDataGrid.GridCellRendererBase[],System.Int32)">
            <summary>
            Copy the Renderer values to the Array.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.Clear">
            <summary>
            Clear the values in the Renderer Dictionary.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />,
             starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins. </param>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is
            the destination of the elements copied from <see
            cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing. </param>
            <filterpriority>2</filterpriority>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional.-or- The number of elements in the 
            source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> 
            to the end of the destination <paramref name="array" />.-or-The type of the source <see cref="T:System.Collections.ICollection" />
            cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> is less than zero. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is null. </exception>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererCollection.Count">
             <summary>
             Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.
             </summary>
             <returns>
             The number of elements contained in the <see cref="T:System.Collections.ICollection" />.
             </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>
            true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.GetEnumerator">
            <summary>
            Returns the Enumerator for retriving the values.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellTextViewRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the cell value of the associated column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the cell value of the header column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.AllowRecycle">
            <summary>
            Gets or sets a value indicating whether views can be recycled when scrolled out of view. In this case when a cell is 
            scrolled out of view it is moved into a recycle bin and the next time a new element is scrolled into view the element is 
            recovered from the recycle bin and reinitialized with the new content of the cell. The default value is false.
            </summary>
            <value><c>true</c> if elements can be recycled when scrolled out of view; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnPrepareViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.PrepareUIViews"/> to prepare the GridCell's children view(s).
            VirtualizingCellRendererBase overrides this method and creates new views and wires them with the parent cells control.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="rowData">Record for the coresponding row</param>
            <returns>Returns the columnElement of the cell</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.updateColumnElement(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the column element of the passed dataColumn.
            </summary>
            <returns>The column element.</returns>
            <param name="dataColumn">Data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnUnloadViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.UnloadUIViews"/> after a cell is scrolled out of view.
            VirtualizingCellRendererBase overrides this method and either removes the cell renderer visuals from the parent canvas
            or hide them and reuse it later in same canvas depending on whether GridVirtualizingCellRendererBase.AllowRecycle was set.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnUpdateColumnInfo(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.UpdateColumnInfo(Syncfusion.SfDataGrid.DataColumnBase)"/> to update the value of the Cell view corresponding to GridColumn.
            In our control we are reusing the cell views for horizontal scrolling. Hence we need to update the value of the cell view.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="rowData">Record for the coresponding row</param>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IGridCellRenderer.DataGrid">
            <summary>
            The SfDataGrid
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IGridCellRenderer.Context">
            <summary>
            Gets and returns the context of the datagrid.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IGridCellRenderer.IsEditable">
            <summary>
            Gets or sets a value that indicates whether the cell is editable.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IGridCellRenderer.HasCurrentCellState">
            <summary>
            Specifies whether the cell state for the current cell has been set.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.Layout(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Renderer will arrange the views using this method
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="view">Corresponding UiElement</param>
            <param name="left">left end of the cell for arranging the view</param>
            <param name="top">top value for arranging the view</param>
            <param name="right">right end of the cell for arranging the view</param>
            <param name="bottom">bottom value for arranging the view</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.UpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates CellValue of the view
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.Measure(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32)">
            <summary>
            Method which is used by the renderer to Measure the Cell views.
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="view">Corresponding view</param>
            <param name="widthMeasureSpec">Corresponding width for measuring the view size</param>
            <param name="heightMeasureSpec">Corresponding height for measuring the view size</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.PrepareViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to create and initiate the view for Cell
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="rowData">Record for the coresponding row</param>
            <param name="column">Corresponding Grid Column</param>
            <param name="columnElement">Corresponding Cell view</param>
            <param name="isInEdit">Indicates whether the view is in edit mode</param>
            <param name="context">Refers the context of the current application</param>
            <returns>Returns the columnElement of the cell</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.UnloadViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used for Unloading the view of the cell.(For Recyclling Purpose)
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.RefreshDisplayValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to update the style info of the Cell
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.UpdateColumnInfo(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to Update the Binding Information of the Cell UIElement
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="rowData">Record for the coresponding row</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.GetControlValue">
            <summary>
            Returns the current cell value, only if the renderer's HasCurrentCellState is true
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.SetControlValue(System.Object)">
            <summary>
            Set the current cell value, only if the renderer's HasCurrentCellState is true
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.SetCurrentCellState(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Boolean,System.Boolean)">
            <summary>
            Update the current cell information in the renderer while current cell was activated.
            </summary>
            <param name="currentCellIndex">CurrentCell Index</param>
            <param name="currentCellElement">CurrentCell UIElement</param>
            <param name="isInEditing">Indicates whether the view is in edit mode</param>
            <param name="isFocused">Indicates whether the cell is focused</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.ResetCurrentCellState">
            <summary>
            Reset the current cell information in renderer when the current cell is deactivated.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.BeginEdit(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,Syncfusion.SfDataGrid.GridColumn,System.Object)">
            <summary>
            Current cell enters into edit mode 
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="cellElement">Corresponding Cell Element</param>
            <param name="column">Corresponding Grid Column</param>
            <param name="rowData">Corresponding Record of the Row </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.EndEdit(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,Syncfusion.SfDataGrid.GridColumn,System.Object)">
            <summary>
            current cell Leave the edit mode. 
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="cellElement">Corresponding Cell Element</param>
            <param name="column">Corresponding Grid Column</param>
            <param name="rowData">Corresponding Record of the Row </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.CanUpdateBinding(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Determines whether the binding for the column can be updated. 
            Implement this method to update binding on particular renderer when the data context is set.
            </summary>
            <returns>
            Returns <b>true</b> if the binding is updated for the column.
            </returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.VirtualizingCellUIElementBin`1">
            <summary>
            This class implements a cache of view of the given type parameter T. It is used by the 
            <see cref="!:GridVirtualizingCellRendererBase&lt;T&gt;"/> renderer to recycle View elements for cells 
            that were scrolled out of view and delay unloading of views.
            This reduces the number of times the views needs to be created or unloaded and instead only the 
            contents of the views will be reinitialized with cell contents. <para/>
            </summary>
            <typeparam name="T">Type of the view</typeparam>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VirtualizingCellUIElementBin`1.Item(Syncfusion.SfDataGrid.GridCellRendererBase)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.Queue`1"/> for the specified Renderer.
            </summary>
            <value></value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellUIElementBin`1.Enqueue(Syncfusion.SfDataGrid.GridCellRendererBase,`0)">
            <summary>
            Enqueues the specified UI view.
            </summary>
            <param name="renderer">The renderer.</param>
            <param name="view">The UI view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellUIElementBin`1.Dequeue(Syncfusion.SfDataGrid.GridCellRendererBase)">
            <summary>
            Dequeues a view from the specified renderer.
            </summary>
            <param name="renderer">The renderer.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AutoExpandGroups">
            <summary>
            Gets or sets the AutoExpandGroups property to enable expand all the groups while grouping in SfDataGrid.
            </summary>
            <value>True to enable autoExpandGroups.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowGroupExpandCollapse">
            <summary>
            Gets or sets the AllowGroupExpandCollapse property to enable group expand and collapse in SfDataGrid.
            </summary>
            <value>True to enable allowGroupExpandCollapse.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowSwiping">
            <summary>
            Gets or sets the AllowSwiping property to enable Swiping in SfDataGrid.
            </summary>
            <value>True to enable swiping.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.MaxSwipeOffset">
            <summary>
            Gets or sets the maximum swipe offSet. The default value is 200.
            </summary>
            <value>The maximum swipe offset value.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.PullToRefreshView">
            <summary>
            Gets or sets the PullToRefresh View of DataGrid.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.PullToRefreshCommand">
            <summary>
            Gets or sets the command which will be execute when an end-user perform PullToRefresh action.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMorePosition">
            <summary>
            Gets or sets the position to load the LoadMoreView.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView">
            <summary>
            Gets or sets the load more view of the DataGrid.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreText">
            <summary>
            Gets or sets the load more text to be displayed in the LoadMoreView.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreCommand">
            <summary>
            Gets or sets the command executed when an end-user clicks the LoadMoreView to load new data items.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.IsBusy">
            <summary>
            Gets or sets value indicating the busy state of the SfDataGrid when executing the PullToRefresh.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowPullToRefresh">
            <summary>
            Gets or sets value indicating whether to enable/disable PullToRefresh.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowLoadMore">
            <summary>
            Gets or sets a value indicating whether to enable/disable the LoadMoreView for adding more records in runtime.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.ItemsSource">
            <summary>
            Gets or Sets the ItemsSource of the grid.
            </summary>
            <value>The items source.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SortComparers">
            <summary>
            Gets the sort comparers.
            </summary>
            <value>The sort comparers.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.View">
            <summary>
            Gets the current view of the SfDataGrid.
            </summary>
            <value>The view.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.CellRenderers">
            <summary>
            Gets the Renderers Which will return the collection of Renderers in the SfDataGrid.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.Columns">
            <summary>
            Gets or Sets the GridColumns of the SfDataGrid.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.ColumnSizer">
            <summary>
            Gets or Sets the ColumnSizer of the SfDataGrid.
            </summary>
            <value>The columnSizer.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SourceType">
            <summary>
            Gets or Sets the SourceType of the ItemsSource.
            </summary>
            <value>The type of the source.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumns">
            <summary>
            Gets or Sets the boolean value based on which columns that are not defined by the user are generated. The default value is true.
            </summary>
            <value><c>true</c> if auto generate columns; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumnsMode">
            <summary>
            Gets or Sets the AutoGenerateColumnsMode based on which the columns that are not defined by the user are created.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.HeaderRowHeight">
            <summary>
            Gets or Sets the Header row height. The default value is 50.
            </summary>
            <value>The height of the header row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.RowHeight">
            <summary>
            Gets or Sets the RowHeight for the rows in the body and footer region. The default value is 40.
            </summary>
            <value>The height of the row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.DefaultColumnWidth">
            <summary>
            Gets or Sets the DefaultColumnWidth. The default value is 120 for android and 106 for iOS.
            </summary>
            <value>The height of the row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.ShowRowHeader">
            <summary>
            Gets or Sets the boolean value based on which RowHeader is shown. The default value is false.
            </summary>
            <value><c>true</c> if show row header; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.RowHeaderWidth">
            <summary>
            Gets or Sets the width of the RowHeader column. The default value is 20.
            </summary>
            <value>The width of the row header.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.FooterRowsCount">
            <summary>
            Gets or Sets the Footer rows count to freeze the rows at the bottom end. The default value is 0.
            </summary>
            <value>The footer rows count.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.FooterColumnsCount">
            <summary>
            Gets or Sets the Footer columns count to freeze the columns at the right end. The default value is 0.
            </summary>
            <value>The footer columns count.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.FrozenRowsCount">
            <summary>
            Gets or Sets the Frozen rows count to freeze the rows at the top below header. The default value is 0.
            </summary>
            <value>The frozen rows count.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.FrozenColumnsCount">
            <summary>
            Gets or Sets the Frozen columns count to freeze the columns in the left next to RowHeader. The default value is 0.
            </summary>
            <value>The frozen columns count.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SortColumnDescriptions">
            <summary>
            Gets or sets the sort column descriptions given by the user programatically.
            </summary>
            <value>The sort column descriptions.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowSorting">
            <summary>
            Gets or sets a value indicating whether the to enable sorting or not.
            </summary>
            <value><c>true</c> if allow sorting; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowMultiSorting">
            <summary>
            Gets or sets a value indicating whether to enable Multi Column Sorting or not.
            </summary>
            <value><c>true</c> if allow Multi Column sorting; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowTriStateSorting">
            <summary>
            Gets or sets a value indicating whether to enable tri state sorting or not.
            </summary>
            <value><c>true</c> if allow tri state sorting; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SortTapAction">
            <summary>
            Gets or sets a value indicating whether to sort data on Single Tap or Double Tap.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.CellBorderStyle">
            <summary>
            Gets or sets the cell border style.
            </summary>
            <value>The cell border style.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.GridStyle">
            <summary>
            Gets or sets the grid style.
            </summary>
            <value>The grid style.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AlternatingRowColor">
            <summary>
            Gets or sets the color of the alternating row.
            </summary>
            <value>The color of the alternating row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AlternationCount">
            <summary>
            Gets or sets the alternation count.
            </summary>
            <value>The alternation count.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.DataFetchSize">
            <summary>
            Gets or sets the size of the data fetch Size for the Incremental Source 
            </summary>
            <value>The size of the data fetch.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SelectionController">
            <summary>
            Gets or sets the selection controller.
            </summary>
            <value>The selection controller.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SelectionMode">
            <summary>
            Gets or sets the selection mode.
            </summary>
            <value>The selection mode.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.CaptionSummaryRow">
            <summary>
            Gets or sets the caption summary row.
            </summary>
            <value>The caption summary row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedIndex">
            <summary>
            Gets or sets the SelectedIndex.
            </summary>
            <value>The index of the selected.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.CurrentItem">
            <summary>
            Gets or sets the current selcted item.
            </summary>
            <value>The current item.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItem">
            <summary>
            Gets or sets the first selected item.
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItems">
            <summary>
            Gets the selected items.
            </summary>
            <value>The selected items.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.GroupColumnDescriptions">
            <summary>
            Gets or sets the group column descriptions.
            </summary>
            <value>The group column descriptions.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.GroupingMode">
            <summary>
            Gets or sets the grouping mode.
            </summary>
            <value>The grouping mode.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.GroupCaptionTextFormat">
            <summary>
            Gets or sets the group caption text format.
            </summary>
            <value>The group caption text Format.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.ScrollingMode">
            <summary>
             Gets or sets the ScrollingMode of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
             </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowDraggingColumn">
            <summary>
            Gets or sets a value indicating whether to enable/disable the column dragging or not.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.GridColumnDragDropController">
            <summary>
            Gets or sets the grid column drag and drop controller.
            </summary>
            <value>The grid column drag and drop controller.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.RowDragDropTemplate">
            <summary>
            Gets or sets the row drag and drop template that is used to display when row dragging and dropping.
            </summary>
            <remarks>Default template will be displayed, if row drag and drop template is empty</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowDraggingRow">
            <summary>
            Gets or sets a value indicating whether to enable/disable the column dragging or not.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.GridRowDragDropController">
            <summary>
            Gets or sets the grid row drag and drop controller.
            </summary>
            <value>The grid column row and drop controller.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.SfDataGrid.SfDataGrid.VerticalOverScrollMode" -->
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.VisualContainer">
            <summary>
            Gets the VisualContainer of the SfDataGrid.
            </summary>
            <value>The visual container.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.HeaderLineCount">
            <summary>
            Gets or Sets the header line count of the SfDataGrid. The default value is 1.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.RowGenerator">
            <summary>
            Gets or Sets the RowGenerator.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.GridModel">
            <summary>
            Gets or Sets the GridModel of the SfDataGrid.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.InRowHeaderChange">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> in row header change.
            </summary>
            <value><c>true</c> if in row header change; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreViewHeight">
            <summary>
            Gets the load more view height
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.LeftSwipeView">
            <summary>
            Gets or sets the <see cref="!:Xamarin.Forms.View"/> which is created using left swipe template.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.RightSwipeView">
            <summary>
            Gets or sets the <see cref="!:Xamarin.Forms.View"/> which is created using right swipe template
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSwipeStartedEvent(Syncfusion.SfDataGrid.SwipeStartedEventArgs)">
            <summary>
            Raises the swipe started event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSwipingEvent(Syncfusion.SfDataGrid.SwipingEventArgs)">
            <summary>
            Raises the swiping event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSwipeEndedEvent(Syncfusion.SfDataGrid.SwipeEndedEventArgs)">
            <summary>
            Raise the swipe ended event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnGridThemeChanged">
            <summary>
            Raises the grid theme changed event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnCaptionSummaryRowChanged(Syncfusion.SfDataGrid.GridSummaryRow)">
            <summary>
            Raises the caption summary row changed event.
            </summary>
            <param name="row">Row.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnAlternationCountChanged">
            <summary>
            Raises the alternation count changed event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnAlternatingRowColorchanged(Android.Graphics.Color)">
            <summary>
            Raises the alternating rowstylechanged event.
            </summary>
            <param name="newvalue">Newvalue.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnItemsSourceChanged(System.Object,System.Object)">
            <summary>
            Occurs when the SfDataGrid's <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ItemsSource"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnColumnsPropertyChanged(Syncfusion.SfDataGrid.Columns,Syncfusion.SfDataGrid.Columns)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/>  property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnColumnSizerChanged(Syncfusion.SfDataGrid.ColumnSizer,Syncfusion.SfDataGrid.ColumnSizer)">
            <summary>
            Occcurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ColumnSizer"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnHeaderRowHeightChanged(System.Double,System.Double)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.HeaderRowHeight"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnRowHeightChanged(System.Double,System.Double)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.RowHeight"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.onDefaultColumnWidthChanged(System.Double,System.Double)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.DefaultColumnWidth"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnRowHeaderWidthChanged(System.Double,System.Double)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.RowHeaderWidth"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnShowRowHeaderChanged(System.Boolean,System.Boolean)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ShowRowHeader"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnFooterRowsCountPropertyChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.FooterRowsCount"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnFooterColumnsCountPropertyChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.FooterColumnsCount"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnFrozenRowsCountPropertyChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.FrozenRowsCount"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnFrozenColumnsCountPropertyChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.FrozenColumnsCount"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnSelectedItemChanged(System.Object,System.Object)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItem"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnSelectionModeChanged(Syncfusion.SfDataGrid.SelectionMode,Syncfusion.SfDataGrid.SelectionMode)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectionMode"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnSelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedIndex"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnCurrentItemChanged(System.Object,System.Object)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.CurrentItem"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnSelectedItemsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItems"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.InvalidateRowHeight(System.Int32)">
            <summary>
            Invalidates the height of the row.
            </summary>
            <param name="rowIndex">Row index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.#ctor(Android.Content.Context)">
            <summary>
            Initializes the SfDataGrid and adds ScrollViewer as a Child. The ScrollViews has VisualContainer as a Child. 
            Also Initializes the required collections, GridModel and the RendererCollections.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnMeasure(System.Int32,System.Int32)">
            <summary>
            Raises the measure event.
            </summary>
            <param name="widthMeasureSpec">Width measure spec.</param>
            <param name="heightMeasureSpec">Height measure spec.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Layout the children in the view. Derived classes with children should override this method and call layout on each of their children.
            </summary>
            
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">Left position, relative to parent</param>
            <param name="right">Right position, relative to parent</param>
            <param name="top">Top position, relative to parent</param>
            <param name="bottom">Bottom position, relative to parent</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.GetUnboundCellValue(Syncfusion.SfDataGrid.GridColumn,System.Object)">
            <summary>
            Gets the cell value to populate the UnboundColumn by evaluating the expression or Format with the record.
            </summary>
            <param name="column">
            Specifies the corresponding column to get the cell value.
            </param>
            <param name="record">
            Specifies the corresponding record to get the cell value.
            </param>
            <returns>
            Returns the cell value of the specified column based on Expression or Format with record.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Thrown when the GridUnboundColumn is defined with Expression for DataTable .
            </exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.ExpandAllGroup">
            <summary>
            Expands all the groups in SfDataGrid.
            </summary>
            <remarks>This method expand all the groups in SfDataGrid programmatically.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CollapseAllGroup">
            <summary>
            Collapses all the groups in SfDataGrid.
            </summary>
            <remarks>This method collapse all the groups in SfDataGrid programmatically.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.ExpandGroup(Syncfusion.Data.Group)">
            <summary>
            Expands the specified group.
            </summary>
            <param name="group">Specifies the group to expand it from view.</param>   
            <example><code lang="C#"><![CDATA[        
             var group = (dataGrid.View.Groups[0] as Group);
               this.dataGrid.ExpandGroup(group);
            ]]></code></example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CollapseGroup(Syncfusion.Data.Group)">
            <summary>
            Collapses the specified Group.
            </summary>
            <param name="group">Specifies the group to collapse it from view.</param>       
            <example><code lang="C#"><![CDATA[        
             var group = (dataGrid.View.Groups[0] as Group);
               this.dataGrid.CollapseGroup(group);
            ]]></code></example>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfDataGrid.SfDataGrid.SetItemsSource(System.Object)" -->
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.ScrollToColumnIndex(System.Int32)">
            <summary>
            Scrolls the SfDataGrid to the column at the given index.
            </summary>
            <param name="columnIndex">The column index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.ScrollToRowIndex(System.Int32)">
            <summary>
            Scrolls the SfDataGrid to the row at the given index.
            </summary>
            <param name="rowIndex">The row index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.ScrollToRowColumnIndex(System.Int32,System.Int32)">
            <summary>
            Scrolls the SfDataGrid to given row and column index.
            </summary>
            <param name="columnIndex">The column index</param>
            <param name="rowIndex">The row index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.ScrollToPosition(System.Double,System.Double)">
            <summary>
            Scrolls the grid to given x and y position.
            </summary>
            <param name="x">The X poisition.</param>
            <param name="y"> The Y position.</param>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.SortColumnsChanging">
            <summary>
            Occurs when sort columns changing.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.SortColumnsChanged">
            <summary>
            Occurs when sort columns changed.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.QueryRowHeight">
            <summary>
            Occurs when query row height changing.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.AutoGeneratingColumn">
            <summary>
             occurs when AutoGeneratecolumns = true to customize the order of columns and celltype 
             this event can be utilized.
             </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.OnScrolled">
            <summary>
            Occurs when on scrolled.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.SelectionChanging">
            <summary>
            Occurs when on Selection changing.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.SelectionChanged">
            <summary>
            Occurs when on Selection changed.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GridViewCreated">
            <summary>
            Occurs when grid view created.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GridTapped">
            <summary>
            Occurs when a SfDataGrid is tapped.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GridLongPressed">
            <summary>
            Occurs when a SfDataGrid is LongPressed.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GridDoubleTapped">
            <summary>
            Occurs when grid is double tapped.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.SwipeStarted">
            <summary>
            Occurs when swipe is started.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.Swiping">
            <summary>
            Occurs when swiping is in progress.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.SwipeEnded">
            <summary>
            Occurs when swipe is ended.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GridLoaded">
            <summary>
            Occurs when SfDataGrid is loaded.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanding">
            <summary>
            Occurs when a group is being expanding.
            </summary>
            <remarks>
            You can cancel or customize the group being expanded through <see cref="T:Syncfusion.SfDataGrid.GroupChangingEventArgs"/> event argument.
            This event will not be raised when the group is expanded programmatically. 
            </remarks>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanded"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsing"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsed"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.QueryUnboundColumnValue">
            <summary>        
            Occurs to query or commit the values for GridUnboundColumn when its cells is initialized or committed.
            Occurs when the value of each cell in GridUnboundColumn being initialized or committed.
            </summary>
            <remarks>
            You can customize the value of GridUnboundColumn being initialized in the <b>QueryUnboundColumnValue</b> event handler.
            </remarks>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsing">
            <summary>
            Occurs when a group is being collapsed. 
            </summary>
            <remarks>
             You can cancel or customize the group being collapsed through <see cref="T:Syncfusion.SfDataGrid.GroupChangingEventArgs"/> event argument.
            This event will not raise when the group is collapsed programmatically. 
            </remarks>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsed"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanding"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanded"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanded">
            <summary>
            Occurs when a group is expanded. 
            </summary>
            <remarks>
            This event occurs after the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanding"/> event if that event is not canceled. 
            This event will not raised when the group is expanded programmatically.
            </remarks>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanding"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsing"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsed"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsed">
            <summary>
            Occurs when a group is collapsed. 
            </summary>
            <remarks>
            This event occurs after the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsing"/> event if that event is not canceled.
            This event will not raise when the group is collapsed programmatically.
            </remarks>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsing"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanding"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanded"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.QueryColumnDragging">
            <summary>
            Occurs when a column is being reordered to a new position.
            </summary>
            <remarks>
            You can cancel or customize the column being dragged through <see cref="T:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs"/> event argument.
            </remarks>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.QueryRowDragging">
            <summary>
            Occurs when a row is being reordered to a new position.
            </summary>
            <remarks>
            You can cancel or customize the row being dragged through <see cref="T:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs"/> event argument.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseQueryUnboundValue(Syncfusion.SfDataGrid.UnboundActions,System.Object,Syncfusion.SfDataGrid.GridColumn,System.Object)">
            <summary>
            Helper method to raise UnboundColumn initializing and updating
            </summary>
            <param name="getAction">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="setAction">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="column">Specifies the current column</param>
            <param name="record">Specifies the current row data</param>
            <returns>Returns the GridUnboundColumnEventArgs</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UnWireEvents">
            <summary>
            UnWires the events in the GridModel.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.WireEvents">
            <summary>
            Wires the events in the GridModel.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.gridLoaded">
            <summary>
            Occurs when SfDataGrid is loaded.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CanQueryRowHeight">
            <summary>
            Determines whether this instance can query row height.
            </summary>
            <returns><c>true</c> if this instance can query row height; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.SetSourceList(System.Object)">
            <summary>
            View is created and the source is set to the view. The events in the GridModel is wired in this method.
            </summary>
            
            <param name="source">The items source of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CreateCollectionView(System.Object)">
            <summary>
            The SfDataGrid's view is created and the columns are generated if the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumns"/> property is set.
            </summary>
            
            <param name="source">The items source of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CreateCollectionViewAdv(System.Collections.IEnumerable,Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            The QueryableCollectionViewWrapper is created and the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SourceType"/> is set.
            </summary>
            
            <param name="source">The items source of the SfDataGrid as IEnumerable collection.</param>
            <param name="dataGrid">The SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CheckColumnNameinItemProperties(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Checks the column name in item properties.
            </summary>
            <returns><c>true</c>, if column name in item properties was checked, <c>false</c> otherwise.</returns>
            <param name="column">Column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.GetSourceList(System.Object)">
            <summary>
            Returns the passed items source as IEnumerable collection.
            </summary>
            
            <returns>The source list.</returns>
            <param name="source">The ItemsSource of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.GenerateGridColumns">
            <summary>
            Generates the GridColumns when the SfDataGrid's <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumns"/> propety is set.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateRowAndColumnCount(System.Boolean)">
            <summary>
            Updates the row and column count of the SfDataGrid.
            
            </summary>
            
            <param name="canGenerateVisibleColumns">A boolean value based on which the GridColumns will be generated
            while updating the column count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateFreezePaneRows">
            <summary>
            Sets the number of rows to be in Frozen state in the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateFreezePaneColumns">
            <summary>
            Sets the number of columns to be in Frozen state in the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateRowCountAndScrollBars">
            <summary>
            Updates the row count and scroll bars.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateColumnCount(System.Boolean)">
            <summary>
            Updates the columnCount of the in the SfDataGrid in runtime.
            
            <param name="canGenerateVisibleColumns">A boolean value based on which the GridColumns will be generated while 
            updating the column count.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateRowCount">
            <summary>
            Updates the RowCount of the SfDataGrid in runtime.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.DeferRefresh">
            <summary>
            The SfDataGrid's View is refreshed by calling this method.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.InitialGroup">
            <summary>
            Initials the group.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.InitialSort">
            <summary>
            Initials the sort.
            Called when SortColumndescriptions is set from the user side
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.InsertRow(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts the row.
            insert the line if the row index is in visible rows
            </summary>
            <param name="insertAt">Insert at.</param>
            <param name="count">Count.</param>
            <param name="recordStartIndex">Record start index.</param>
            <param name="recordCount">Record count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RemoveRow(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes the row.
            removes the line if the rowindex is in visible rows
            </summary>
            <param name="removeAt">Remove at.</param>
            <param name="count">Count.</param>
            <param name="recordStartIndex">Record start index.</param>
            <param name="recordCount">Record count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSortColumnsChanged(System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Raises the sort columns changed.
            </summary>
            <param name="addedColumns">Added columns.</param>
            <param name="removedColumns">Removed columns.</param>
            <param name="action">Action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSortColumnsChanged(Syncfusion.SfDataGrid.DataGridSortColumnsChangedEventArgs)">
            <summary>
            Raises the sort columns changed.
            Checks whether SortColumnChanged Event is handled or not
            </summary>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSortColumnsChanging(System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Raises the sort columns changing.
            </summary>
            <returns><c>true</c>, if sort columns changing was raised, <c>false</c> otherwise.</returns>
            <param name="addedColumns">Added columns.</param>
            <param name="removedColumns">Removed columns.</param>
            <param name="action">Action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSortColumnsChanging(Syncfusion.SfDataGrid.DataGridSortColumnsChangingEventArgs)">
            <summary>
            Raises the sort columns changing.
            Checks whether SortColumnChanging Event is handled or not
            </summary>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSelectionChagingEvent(Syncfusion.SfDataGrid.GridSelectionChangingEventArgs)">
            <summary>
            Method which is used to raise the SelectionChanging Event
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSelectionChangedEvent(Syncfusion.SfDataGrid.GridSelectionChangedEventArgs)">
            <summary>
            Method which is used to rasie the selection changed event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseQueryRowHeight(Syncfusion.SfDataGrid.QueryRowHeightEventArgs)">
            <summary>
            Raises the height of the query row.
            </summary>
            <returns><c>true</c>, if query row height was raised, <c>false</c> otherwise.</returns>
            <param name="e">E.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseAutoGeneratingEvent(Syncfusion.SfDataGrid.AutoGeneratingColumnArgs)">
            <summary>
            Raises the auto generating event.
            </summary>
            <returns>The auto generating event.</returns>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseGridTapped(Syncfusion.SfDataGrid.GridTappedEventsArgs)">
            <summary>
            Raises the GridTapped event.
            </summary>
            <param name="e">The GridTappedEventsArgs.The data for the event.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseGridLongPressed(Syncfusion.SfDataGrid.GridLongPressedEventsArgs)">
            <summary>
            Raises the grid long pressed event.
            </summary>
            <param name="e">The GridLongPressedArgs.The data for the event.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseGridDoubleTappedEvent(Syncfusion.SfDataGrid.GridDoubleTappedEventsArgs)">
            <summary>
            Raises the grid double tapped event.
            </summary>
            <param name="e">The GridDoubleTappedEventArgs.The data for the event.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateLoadMoreViewVisibility">
            <summary>
            Collapses load more view if it does not meet the LoadMore enabling condition.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateLoadMoreView(System.Double)">
            <summary>
            Updates the load more visibility based on the VerticalOffset value.
            </summary>
            <param name="value">The VerticalOffset.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseGroupExpandingEvent(Syncfusion.SfDataGrid.GroupChangingEventArgs)">
            <summary>
            Helper method to raise the Group Expanding Event
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseGroupExpandedEvent(Syncfusion.SfDataGrid.GroupChangedEventArgs)">
            <summary>
            Helper method to raise the Group Expanded Event
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseGroupCollapsingEvent(Syncfusion.SfDataGrid.GroupChangingEventArgs)">
            <summary>
            Helper method to raise the Group Collapsing Event
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseGroupCollapsedEvent(Syncfusion.SfDataGrid.GroupChangedEventArgs)">
            <summary>
            Helper method to raise the Group Collapsed Event
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.ExpandGroupsAtLevel(System.Int32)">
            <summary>
            Expands the group based on its level.
            </summary>
            <param name="groupLevel">Specifies the group level to expand the group.</param>       
            <example><code lang="C#"><![CDATA[        
             this.dataGrid.ExpandGroupsAtLevel(2);
            ]]></code></example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CollapseGroupsAtLevel(System.Int32)">
            <summary>
            Collapses the group based on its level.
            </summary>
            <param name="groupLevel">Specifies the group level to collapse the group.</param>
            <example><code lang="C#"><![CDATA[        
             this.dataGrid.CollapseGroupsAtLevel(2);
            ]]></code></example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RefreshContainerAndView">
            <summary>
            The VisualContainer and the SfDataGrid's view is refreshed for the first time after the items source is set. 
            The HeaderLineCount, row and column count is updated in this method.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RefreshHeaderLineCount">
            <summary>
            The SfDataGrid's HeaderLineCount is set.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateRowStyle">
            <summary>
            Updates the row style.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.Initialize">
            <summary>
            Initializes the SfDataGrid with the required elements.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.InitializeCollections">
            <summary>
            Initializes the required collections in the dataGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.initializeLoadMore">
            <summary>
            Initializes a new instance of LoadMoreRowControl with the required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.arrangeLoadMoreView(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Arranges the load more view in the DataGrid.
            </summary>
            <param name="x">The horizontal start position.</param>
            <param name="y">The vertical start position.</param>
            <param name="width">The width for the load more view.</param>
            <param name="height">The height for the load more view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.GenerateGridColumns(Syncfusion.SfDataGrid.Columns,Syncfusion.Data.ICollectionViewAdv)">
            <summary>
            Generates the GridColumns in the SfDataGrid if the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumns"/> property is set.
            </summary>
            
            <param name="gridColumns">The Columns collection.</param>
            <param name="view">The SfDataGrid's view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CreateColumn(System.ComponentModel.PropertyDescriptor,System.Boolean@)">
            <summary>
            Creates a new <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> if the SfDataGrid's <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumns"/> property is set.
            </summary>
            
            <param name="propertyInfo"> The property information of the column to be created.</param>
            <param name="cancelArgs"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.GenerateGridColumnsForDynamic(Syncfusion.SfDataGrid.Columns,Syncfusion.Data.ICollectionViewAdv)">
            <summary>
            Generates the GridColumns for Dynamic ItemsSource in the SfDataGrid if the AutoGenerateColumns property is set as true.
            </summary>
            <param name="gridColumns">The Columns collection.</param>
            <param name="view">The SfDataGrid's view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.InitializeCellRendererCollection">
            <summary>
            Initializes the <see cref="T:Syncfusion.SfDataGrid.GridCellRendererCollection"/> and adds all the renderers to it.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnSortColumnDescriptionChanged(Syncfusion.SfDataGrid.SortColumnDescriptions,Syncfusion.SfDataGrid.SortColumnDescriptions)">
            <summary>
            Raises the sort column description changed event.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnGridColumnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the grid column collection changed event.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">E.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHandledEventArgs.Handled">
            <summary>
            Indicates whether the event has been handled and no further processing of the event should happen.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridEventArgs.OriginalSender">
            <summary>
            Gets the original reporting source that raising this event
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCancelEventArgs.OriginalSender">
            <summary>
            Gets the original reporting source that raising this event
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridViewCreatedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridViewCreated"/> event in a <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridViewCreatedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridViewCreated"/> event.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridTappedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridTapped"/> event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridTappedEventsArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridTapped"/> event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridTappedEventsArgs.RowColumnindex">
            <summary>
            Gets the row column index at the tapped position.
            </summary>
            <value>An object that represents the row and column index at the tapped position.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridTappedEventsArgs.RowData">
            <summary>
            Gets the row data of the tapped row.
            </summary>
            <value>An object that represents row data of the tapped row.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTappedEventsArgs.#ctor(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Object)">
            <summary>
            Initializes a new instance of the GridTappedEventsArgs class using the specified row column index.
            </summary>
            <param name="rowColIndex">The row column index for the tapped position.</param>
            <param name="dataContext">The  dataContext of the tapped row.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridLongPressedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridLongPressed"/> event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridLongPressedEventsArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridLongPressed"/> event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridLongPressedEventsArgs.RowColumnindex">
            <summary>
            Gets the row column index at the long pressed position.
            </summary>
            <value>An object that represents the row and column index at the long pressed position.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridLongPressedEventsArgs.RowData">
            <summary>
            Gets the row data of the long pressed row.
            </summary>
            <value>An object that represents row data of the long pressed row.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridLongPressedEventsArgs.#ctor(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Object)">
            <summary>
            Initializes a new instance of the grid long pressed events arguments class using the specified row column index.
            </summary>
            <param name="rowColIndex">The row column index for the long pressed position.</param>
            <param name="dataContext">The row data of the long pressed row.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridDoubleTappedEventHandler">
            <summary>
            Represents the method that will handle the GridDoubleTapped event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridDoubleTappedEventsArgs">
            <summary>
            Provides data for the GridDoubleTapped event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDoubleTappedEventsArgs.RowColumnindex">
            <summary>
            Gets the row column index at the double tapped position.
            </summary>
            <value>An object that represents the row and column index at the double tapped position.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDoubleTappedEventsArgs.RowData">
            <summary>
            Gets the row data of the double tapped row.
            </summary>
            <value>An object that represents row data of the double tapped row.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDoubleTappedEventsArgs.#ctor(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Object)">
            <summary>
            Initializes a new instance of the grid double tapped events arguments class using the specified row column index.
            </summary>
            <param name="rowColIndex">The row column index for the double tapped.</param>
            <param name="dataContext">The row data of the double tapped row.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridLoadedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridLoaded"/> event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridLoadedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridLoaded"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridLoadedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the GridLoadedEventArgs class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.AlternatingRowColor">
            <summary>
            Gets or sets the alternating row color.
            </summary>
            <value>The color of the alternating row.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetAlternatingRowBackgroundColor">
            <summary>
            Gets the AlternatingRow's background color.
            </summary>
            <returns>The row background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetHeaderBackgroundColor">
            <summary>
            Gets the Header's background color.
            </summary>
            <returns>The background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetHeaderForegroundColor">
            <summary>
            Gets the Header's foreground color.
            </summary>
            <returns>The fore ground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetRecordBackgroundColor">
            <summary>
            Gets the Record's Background color.
            </summary>
            <returns>The back ground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetRecordForegroundColor">
            <summary>
            Gets the Record's foreground color.
            </summary>
            <returns>The fore ground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetBordercolor">
            <summary>
            Gets the Border Color.
            </summary>
            <returns>The brush.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetCaptionSummaryRowBackgroundColor">
            <summary>
            Gets the CaptionSummaryRow's background color.
            </summary>
            <returns>The summary row background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetCaptionSummaryRowForeGroundColor">
            <summary>
            Gets the CaptionSummaryRow's foreground color.
            </summary>
            <returns>The summary row fore ground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetLoadMoreViewBackgroundColor">
            <summary>
            Gets the load more view background color.
            </summary>
            <returns>The load more view background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetLoadMoreViewForegroundColor">
            <summary>
            Gets the load more view foreground color.
            </summary>
            <returns>The load more view foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetHeaderSortIndicatorDown">
            <summary>
            Gets the Resource ID from the Android resources for the sort down indicator.
            </summary>
            <returns>The header sort indicator down.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetHeaderSortIndicatorUp">
            <summary>
             Gets the Resource ID from the Android resources for the sort up indicator.
            </summary>
            <returns>The header sort indicator up.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetGroupExpanderIcon">
            <summary>
            Gets the Resource ID from the Android resources for group expander icon.
            </summary>
            <returns>The group expander icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetGroupCollapseIcon">
            <summary>
             Gets the Resource ID from the Android resources for the group collapse icon.
            </summary>
            <returns>The group collapse icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetColumnDragUpIndicator">
            <summary>
            Gets the column drag indicator up.
            </summary>
            return Android.Resources.Drawable."Your drag up Indicator icon".
            <returns>The Drag indicator up.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetColumnDragDownIndicator">
            <summary>
            Gets the column drag indicator down.
            </summary>
            return Android.Resources.Drawable."Your drag down Indicator icon".
            <returns>The Drag indicator down.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetSelectionBackgroundColor">
            <summary>
            Gets the selection background color.
            </summary>
            <returns>The selection background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetSelectionForegroundColor">
            <summary>
            Gets the selection foreground color.
            </summary>
            <returns>The selection foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetGridLinesVisibility">
            <summary>
            Gets the type of the borders to be drawn in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <returns>The border type for <see cref="!:Syncfusion.SfDataGrid.XForms.iOS"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetColumnDragViewBorderColor">
            <summary>
            Gets the column drag view border color.
            </summary>
            <returns>The column drag view border color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetColumnDragViewBackgroundColor">
            <summary>
            Gets the column drag view background color.
            </summary>
            <returns>The column drag view background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetColumnDragViewForegroundColor">
            <summary>
            Gets the column drag view foreground color.
            </summary>
            <returns>The column drag view foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ResourceHelper.LoadResource(System.String)">
            <summary>
            Loads the specified resource.
            </summary>
            <returns>The resource.</returns>
            <param name="Name">Name.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.ImageMapStream">
            <summary>
            Bitmap class
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.ImageMapStream.ImageData">
            <summary>
            Gets or sets the image data.
            </summary>
            <value>The image data.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ImageMapStream.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:DSoft.Datatypes.Types.DSBitmap"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ImageMapStream.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="!:DSoft.Datatypes.Types.DSBitmap"/> class.
            </summary>
            <param name="Data">Data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GroupChangingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanding"/> and <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsing"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.SfDataGrid.GroupChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GroupChangingEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanding"/> and <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsing"/> events.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GroupChangingEventArgs.#ctor(System.Object)">
            <summary>
            </summary>
            <param name="originalSource">
            The source of the event.
            </param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GroupChangingEventArgs.Group">
            <summary>
            Gets the corresponding group that is being expanded or collapsed in view.
            </summary>
            <value>
            The <see cref="T:Syncfusion.Data.Group"/> that is being changed in view.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GroupChangedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanded"/> and <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsed"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="!:Syncfusion.SfDataGrid.XForms.GroupChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GroupChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanded"/> and <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsed"/> events.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GroupChangedEventArgs.#ctor(System.Object)">
            <summary>
            </summary>
            <param name="originalSource">
            The source of the event.
            </param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GroupChangedEventArgs.Group">
            <summary>
            Gets the corresponding group that is expanded or collapsed in view.
            </summary>
            <value>
            The <see cref="T:Syncfusion.Data.Group"/> that is being changed in view.
            </value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.GetExpressionFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns Expression Func for UnBoundColumns for Sorting and Grouping.
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
            <remarks></remarks>
            
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.GetUnboundFunc(Syncfusion.SfDataGrid.GridUnboundColumn)">
            <summary>
            Gets Unbound Func Value for sorting and grouping
            </summary>
            <param name="column">Specfies the current grid column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.PointToCellRowColumnIndex(Syncfusion.SfDataGrid.SfDataGrid,System.Drawing.Point,System.Boolean)">
            <summary>
            Gets the row column index for the given point.
            </summary>
            <param name="dataGrid">The SfDataGrid.</param>
            <param name="p">The Point</param>
            <param name="allowOutSideLines">Need to pass allowOutSideLines as true to return rowcolumn index while re ordering columns.</param>
            <returns>The row column index</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.RowColumnIndexToPoint(Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Gets the point for the given row column index.
            </summary>
            <param name="dataGrid">The SfDataGrid.</param>
            <param name="rowColumnIndex">The RowColumnIndex.</param>
            <returns>The point</returns>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSelectionController.SelectedRows">
            <summary>
            Maintains the selected rows
            </summary>
            <value>The selected rows.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSelectionController.LastSelectedRowIndex">
            <summary>
            Maintains the Last selected index
            </summary>
            <value>The last index of the selected row.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.#ctor">
            <summary>
            Initializes the new instance of the  Grid SelectionController class.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfDataGrid.GridSelectionController.ProcessingPointerTouchUp(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.MotionEvent)" -->
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.HandleCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,Syncfusion.SfDataGrid.CollectionChangedReason)">
            <summary>
            Handles the CollectionChanged event  changed opration such as selecteditems, source collection changed event 
            </summary>
            <param name="e">Collection Changed Event Args</param>
            <param name="reason">Which collection has changed</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessSelectedItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Processes the selected items changed.
            Dynamically add the selection from code behind
            </summary>
            <param name="e">E.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.HandleSelectionPropertyChanges(Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs)">
            <summary>
            Handles the selection property changes.
            </summary>
            <param name="handle">Handle.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessSelectedIndexChanged(Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs)">
            <summary>
            Processes the selected index changed.
            Adds the first selected index to the selected index
            </summary>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessSelectionModeChanged(Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs)">
            <summary>
            Processes the selection mode changed.
            When selection mode changed from single/singleDeselect to multiple clears all the selection expect last selection
            </summary>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessSelectedItemChanged(Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs)">
            <summary>
            Adds the firstSelection to the selected item 
            </summary>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessCurrentItemChanged(Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs)">
            <summary>
            Adds the last selection to the current item 
            </summary>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessSourceCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,Syncfusion.SfDataGrid.CollectionChangedReason)">
            <summary>
            Processes the source collection changed.
            Based on the collection changed reason.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.GetSelectionColor(System.Int32,System.Object)">
            <summary>
            Returns the selection color for selected row. This method can be overridden to apply multiple selection color.
            </summary>
            <param name="rowIndex">The index of the selected row</param>
            <param name="rowData">The row data of the selected row </param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.SetSelectionAnimation(Syncfusion.SfDataGrid.VirtualizingCellsControl)">
            <summary>
             Sets animation for the selected row.
            </summary>
            <param name="rowElement">The view which holds the row data of the selected row </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.RefreshSelection">
            <summary>
            sets the current item and selected item after selection changed 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ClearSelection">
            <summary>
            Clears all the selection.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.HandlePointerOperation(Syncfusion.SfDataGrid.GridPointerEventArgs,Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the pointer operation such Touch down,up,double tap,
            </summary>
            <param name="args">Arguments.</param>
            <param name="rowColumnIndex">Row column index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.HandleGridOperation(Syncfusion.SfDataGrid.GridOPerationHandlerArgs)">
            <summary>
            Handles the grid operation 
            </summary>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessOnSortChanged(Syncfusion.SfDataGrid.SortColumnChangedHandleArgs)">
            <summary>
            Processes  on sort changed.
            </summary>
            <param name="sortcolumnhandle">Sortcolumnhandle.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessOnGroupChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Processes the  group changed.
            </summary>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ResetSelection">
             <summary>
            Resets the selected Index.
             </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ScrollerToCurrentItem">
            <summary>
            Scrollers to current item while sorting if AllowAutoScroll is true 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.RaiseSelectionChanging(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object})">
            <summary>
            Method which helps to raise the selection changing event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.RaiseSelectionChanged(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object})">
            <summary>
            Method which helps to Raise the SelectionChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowInfo.#ctor(System.Int32,System.Object)">
            <summary>
            Constructor to intialize the NodeEntry, Rowdata and RowIndex for summary row.
            </summary>
            <param name="rowIndex"> (Optional) zero-based index of the summary row. </param>
            <param name="rowData"> Data on the row. </param>
            <param name="nodeEntry"> NodeEntry of the row. </param>
            <param name="isAddNewRow"> (Optional) True if the row is an AddNewRow. </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowInfo.#ctor(System.Int32)">
            <summary>
            Constructor to intialize the NodeEntry, Rowdata and RowIndex for summary row.
            </summary>
            <param name="rowIndex"> zero-based index of the summary row. </param>
            <param name="isAddNewRow"> True if the row is an AddNewRow. </param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridRowInfo.RowData">
            <summary>
            Gets the data in particular row.
            </summary>
            <value> Business Object. </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridRowInfo.IsDataRow">
            <summary>
            Gets a value indicating whether this object is data row cell.
            </summary>
            <value> True if this object is data row, false if not. </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridRowInfo.RowIndex">
            <summary>
            Gets a value indicating the row index of the particular row.
            </summary>
            <value> Row index of the row. </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridRowInfo.NodeEntry">
            <summary>
            Gets a NodeEntry information of the particular row.
            </summary>
            <value> Node Entry. </value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridSelectionController.HandlePointerOperation(Syncfusion.SfDataGrid.GridPointerEventArgs,Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the pointer operation such Touch down,up,double tap,
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridSelectionController.HandleCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,Syncfusion.SfDataGrid.CollectionChangedReason)">
            <summary>
            Method which called when the collections like SelectedItems, Columns and DataSource changed.
            </summary>
            <param name="e">Collection Changed Event Args</param>
            <param name="reason">Which collection has changed</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridPointerEventArgs.Operation">
            <summary>
            Type of PointerOperation. 
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridPointerEventArgs.OriginalEventArgs">
            <summary>
            Pointer Event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs.NewValue">
            <summary>
            New modified vale
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs.OldValue">
            <summary>
            old value of the property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs.PropertyName">
            <summary>
            Changed property name.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.SfDataGrid.GridSelectionChangingEventHandler" -->
        <member name="T:Syncfusion.SfDataGrid.GridSelectionChangingEventArgs">
            <summary>
            Class which contains the arguments for SelectionChanging Event.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSelectionChangingEventArgs.AddedItems">
            <summary>
            List of items which are going to add in SelectedItems
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSelectionChangingEventArgs.RemovedItems">
            <summary>
            List of items which are removed from SelectedItems.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridSelectionChangedEventHandler">
            <summary>
            Delegate for SelectionChanged event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.SfDataGrid.GridSelectionChangedEventArgs">GridSelectionChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridSelectionChangedEventArgs">
            <summary>
            Class which contains the arguments for SelectionChanged event.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSelectionChangedEventArgs.AddedItems">
            <summary>
            List of items which are added to SelectedItems
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSelectionChangedEventArgs.RemovedItems">
            <summary>
            List of items which are removed from SelectedItems.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.SfDataGrid.CoveredCellInfo">
            <summary>
            A class that contains the information about the covered cells.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CoveredCellInfo.RowIndex">
            <summary>
            Gets the row Index for the CoveredCells.
            </summary>
            <value>The row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CoveredCellInfo.Left">
            <summary>
            Gets the left of the CoveredCells.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CoveredCellInfo.Right">
            <summary>
            Gets the right of the CoveredCells.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CoveredCellInfo.Name">
            <summary>
            Gets the name of the Column for the Corresponding CoveredCells.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CoveredCellInfo.Width">
            <summary>
            Gets the width of the CoveredCells.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CoveredCellInfo.RowSpan">
            <summary>
            Gets or sets the row span for the CoveredCells.
            </summary>
            <value>The row span.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of CoveredCellInfo class with the given left and right values.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of CoveredCellInfo class with the given left, right and name.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of CoveredCellInfo class with the given left, right and row index values.
            </summary>
            <param name="index"></param>
            <param name="left"></param>
            <param name="right"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.CompareTo(System.Object)">
            <summary>
            Compares the given object to another object, returning an integer that indicates the relationship.
            An implementation of this method must return a value less than zero if this is less than the given object, 
            zero if this is equal to the given object, or a value greater than zero if this is greater than the given object.
            </summary>
            <param name="obj">An object</param>
            <returns>An integer that indicates the relationship.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.CompareTo(Syncfusion.SfDataGrid.CoveredCellInfo)">
            <summary>
            Compares the values in the given CoveredCellInfo object with the current instance, returning an integer that indicates the relationship.
            An implementation of this method must return a value less than zero if this is less than the given CoveredCellInfo, 
            zero if this is equal to the given CoveredCellInfo, or a value greater than zero if this is greater than the given CoveredCellInfo.
            </summary>
            <param name="coveredCellInfo">A CoveredCellInfo object.</param>
            <returns>An integer that indicates the relationship</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.Equals(System.Object)">
            <summary>
            Returns a boolean indicating if the passed object obj is Equal to this.
            Equality is defined as object equality for reference types and bitwise equality for value types 
            using a loader trick to replace Equals with EqualsValue for value types.
            </summary>
            <param name="obj">An object.</param>
            <returns>Returns a boolean indicating if the passed object obj is Equal to this</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.ToString">
            <summary>
            Returns a String which represents the object instance. The default for an object is to return the fully qualified name of the class.
            </summary>
            <returns>The fully qualified name of the class.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.GetHashCode">
            <summary>
            GetHashCode is intended to serve as a hash function for this object. Based on the contents of the object, 
            the hash function will return a suitable value with a relatively random distribution over the various inputs.
            <para/>
            The default implementation returns the [....] block index for this instance. Calling it on the same object multiple 
            times will return the same value, so it will technically meet the needs of a hash function, but it's less than ideal.
            Objects (especially value classes) should override this method.
            </summary>
            <returns>Return a suitable value with a relatively random distribution over the various inputs based on the contents of the object.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.CreateIndentColumn(System.Int32)">
            <summary>
            Creates the indent column.
            </summary>
            <returns>The indent column.</returns>
            <param name="index">Index.</param>
            Method is held UnImplemented for Multiple Group Feature.
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryRow.Name">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryRow.ShowSummaryInRow">
            <summary>
            Gets or sets a value indicating whether [show summary in row].
            </summary>
            <value>true</value>
            <c>false</c>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryRow.SummaryColumns">
            <summary>
            Gets the summary columns.
            </summary>
            <value>The summary columns.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryRow.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCellRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates Cell value of the grouped column
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.GetHorizontalAlignment(Android.Views.GravityFlags,Android.Views.GravityFlags)">
            <summary>
            Gets the Horizontal alignment of the cell element.
            </summary>
            <param name="orginalAlignment">The original alignment.</param>
            <param name="alignment">The horizontal alignment to be set.</param>
            <returns>The horizontal alignment based on the original alignment.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.GetVerticalAlignment(Android.Views.GravityFlags,Android.Views.GravityFlags)">
            <summary>
            Gets the Vertical alignment of the cell element.
            </summary>
            <param name="orginalAlignment">The original alignment.</param>
            <param name="alignment">The vertical alignment to be set.</param>
            <returns>The vertical alignment based on the original alignment.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.CalculateLeftAndRightPadding(Android.Views.GravityFlags,Android.Widget.TextView,System.String,System.Int32,System.Int32,System.Int32@,System.Int32@,Syncfusion.SfDataGrid.LineBreakMode)">
            <summary>
            Calculates the left and right padding for the cell element.
            </summary>
            <param name="alignment">The alignment of the grid column.</param>
            <param name="view">The view loaded inside the cell element.</param>
            <param name="text">The text of the cell element.</param>
            <param name="width">The width of the cell element.</param>
            <param name="minimumIndent">The minimum indent for the cell element.</param>
            <param name="leftPadding">The left padding value for the cell element.</param>
            <param name="rightPadding">The right padding value for the cell element.</param>
            <param name="lineBreakMode">The line break mode of the associated grid column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.CalculateTopAndBottomPadding(Android.Views.GravityFlags,Android.Widget.TextView,System.String,System.Int32,System.Int32,System.Int32@,System.Int32@,Android.Graphics.Paint,Syncfusion.SfDataGrid.LineBreakMode)">
            <summary>
            Calculates the top and bottom padding for the cell element.
            </summary>
            <param name="alignment">The alignment of the grid column.</param>
            <param name="view">The view loaded inside the cell element.</param>
            <param name="text">The text of the cell element.</param>
            <param name="height">The height of the cell element.</param>
            <param name="minimumIndent">The minimum indent for the cell element.</param>
            <param name="topPadding">The top padding value for the cell element.</param>
            <param name="bottomPadding">The bottom padding value for the cell element.</param>
            <param name="paintText">The paint for the cell element.</param>
            <param name="lineBreakMode">The line break mode of the associated grid column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.OnCellValueChanged">
             <summary>
            Calls when cell value changed 
             </summary>
        </member>
    </members>
</doc>
